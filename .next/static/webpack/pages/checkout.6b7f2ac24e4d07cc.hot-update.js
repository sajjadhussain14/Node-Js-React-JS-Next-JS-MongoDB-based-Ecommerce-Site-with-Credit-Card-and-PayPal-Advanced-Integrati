"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/checkout",{

/***/ "./src/controllers/smartValidator.js":
/*!*******************************************!*\
  !*** ./src/controllers/smartValidator.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validate\": function() { return /* binding */ validate; }\n/* harmony export */ });\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! validator */ \"./node_modules/validator/index.js\");\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(validator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n// START VALIDATOR\n\n\nvar validatedStatus = true;\nvar validate = function(formID) {\n    validateInputs(formID);\n    validateSelect(formID);\n};\nvar validateInputs = function(formID) {\n    var form = document.getElementById(formID);\n    var formInputs = [];\n    try {\n        formInputs = form.getElementsByTagName(\"input\");\n    } catch (err) {}\n    validateNow(formID, formInputs);\n};\nvar validateSelect = function(formID) {\n    var form = document.getElementById(formID);\n    var formInputs = [];\n    try {\n        formInputs = form.getElementsByTagName(\"select\");\n    } catch (err) {}\n    validateNow(formID, formInputs);\n};\nvar validateNow = function(formID, formInputs) {\n    if (!formInputs || formInputs == \"\") {\n        validatedStatus = true;\n    }\n    for(var i = 0; i < formInputs.length; i++){\n        var e = formInputs[i];\n        var id = e.id;\n        var value = e.value;\n        var name = e.name;\n        var attrs = [\n            {\n                key: \"isRequired\",\n                f: checkisRequired\n            },\n            {\n                key: \"isAlpha\",\n                f: checkAlpha\n            },\n            {\n                key: \"isNumeric\",\n                f: checkNumeric\n            },\n            {\n                key: \"isCreditCard\",\n                f: checkCreditCard\n            },\n            {\n                key: \"isCvv\",\n                f: checkCvv\n            },\n            {\n                key: \"isEmail\",\n                f: checkEmail\n            },\n            {\n                key: \"isZip\",\n                f: checkZip\n            },\n            {\n                key: \"isPhone\",\n                f: checkPhone\n            }, \n        ];\n        var keyVal = false;\n        var key = \"\";\n        for(var i1 = 0; i1 < attrs.length; i1++){\n            key = attrs[i1].key;\n            try {\n                keyVal = e.getAttribute(key);\n            } catch (err) {}\n            if (keyVal) {\n                attrs[i1].f(id, name, value);\n            }\n        }\n    }\n    if (!validatedStatus) {\n        try {\n            document.getElementById(formID + \"-validate-state\").value = false;\n        } catch (err) {}\n    } else {\n        try {\n            document.getElementById(formID + \"-validate-state\").value = true;\n        } catch (err) {}\n    }\n};\nvar checkisRequired = function(id, name, value) {\n    try {\n        value = value.replace(/ /g, \"\");\n    } catch (err) {}\n    var v = true;\n    if (validator__WEBPACK_IMPORTED_MODULE_1___default().isEmpty(value, {\n        ignore_whitespace: true\n    })) {\n        document.getElementById(id + \"-error\").innerHTML = name + \" Should not be empty...\";\n        v = false;\n        validatedStatus = false;\n    }\n    if (v != false) {\n        validatedStatus = true;\n        try {\n            document.getElementById(id + \"-error\").innerHTML = \"\";\n            setTimeout(function() {}, 2000);\n        } catch (err) {}\n    }\n};\nvar checkAlpha = function(id, name, value) {\n    var v = true;\n    if (!validator__WEBPACK_IMPORTED_MODULE_1___default().isAlpha(value)) {\n        document.getElementById(id + \"-error\").innerHTML = name + \" is Invalid...\";\n        v = false;\n        validatedStatus = false;\n    }\n    if (v != false) {\n        validatedStatus = true;\n        try {\n            document.getElementById(id + \"-error\").innerHTML = \"\";\n        } catch (err) {}\n    }\n};\nvar checkNumeric = function(id, name, value) {\n    var v = true;\n    if (!validator__WEBPACK_IMPORTED_MODULE_1___default().isNumeric(value, {\n        no_symbols: false\n    })) {\n        document.getElementById(id + \"-error\").innerHTML = name + \" should be Numeric...\";\n        v = false;\n        validatedStatus = false;\n    }\n    if (v != false) {\n        validatedStatus = true;\n        try {\n            document.getElementById(id + \"-error\").innerHTML = \"\";\n        } catch (err) {}\n    }\n};\nvar checkCreditCard = function(id, name, value) {\n    var v = true;\n    if (!validator__WEBPACK_IMPORTED_MODULE_1___default().isCreditCard(value)) {\n        document.getElementById(id + \"-error\").innerHTML = name + \"is Invalid Credit Card Number...\";\n        v = false;\n        validatedStatus = false;\n    }\n    if (v != false) {\n        validatedStatus = true;\n        try {\n            document.getElementById(id + \"-error\").innerHTML = \"\";\n        } catch (err) {}\n    }\n};\nvar checkCvv = function(id, name, value) {\n    var v = true;\n    if (!validator__WEBPACK_IMPORTED_MODULE_1___default().isNumeric(value, {\n        ignore_whitespace: true\n    }) || value.length < 3 || value.length > 4) {\n        document.getElementById(id + \"-error\").innerHTML = name + \" is Invalid...\";\n        v = false;\n        validatedStatus = false;\n    }\n    if (v != false) {\n        validatedStatus = true;\n        try {\n            document.getElementById(id + \"-error\").innerHTML = \"\";\n        } catch (err) {}\n    }\n};\nvar checkEmail = function(id, name, value) {\n    var v = true;\n    if (!validator__WEBPACK_IMPORTED_MODULE_1___default().isEmail(value)) {\n        document.getElementById(id + \"-error\").innerHTML = name + \" is Invalid Email...\";\n        v = false;\n        validatedStatus = false;\n    }\n    if (v != false) {\n        validatedStatus = true;\n        try {\n            document.getElementById(id + \"-error\").innerHTML = \"\";\n        } catch (err) {}\n    }\n};\nvar checkZip = function(id, name, value) {\n    var v = true;\n    if (!/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(value)) {\n        document.getElementById(id + \"-error\").innerHTML = name + \" is Invalid Email...\";\n        v = false;\n        validatedStatus = false;\n    }\n    if (v != false) {\n        validatedStatus = true;\n        try {\n            document.getElementById(id + \"-error\").innerHTML = \"\";\n        } catch (err) {}\n    }\n};\nvar checkPhone = function(id, name, value) {\n    var v = true;\n    if (!/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im.test(value)) {\n        document.getElementById(id + \"-error\").innerHTML = name + \" is Invalid Email...\";\n        v = false;\n        validatedStatus = false;\n    }\n    if (v != false) {\n        validatedStatus = true;\n        try {\n            document.getElementById(id + \"-error\").innerHTML = \"\";\n        } catch (err) {}\n    }\n};\n// END VALIDATOR\nif (true) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function() {\n        validateOnInputChange();\n        validateOnSelectChange();\n    });\n}\nvar validateOnInputChange = function() {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"input\").on(\"input\", function(e) {\n        var id = e.target.id;\n        var name = e.target.name;\n        var value = e.target.value;\n        var attrs = [\n            {\n                key: \"isRequired\",\n                f: checkisRequired\n            },\n            {\n                key: \"isAlpha\",\n                f: checkAlpha\n            },\n            {\n                key: \"isNumeric\",\n                f: checkNumeric\n            },\n            {\n                key: \"isCreditCard\",\n                f: checkCreditCard\n            },\n            {\n                key: \"isCvv\",\n                f: checkCvv\n            },\n            {\n                key: \"isEmail\",\n                f: checkEmail\n            },\n            {\n                key: \"isZip\",\n                f: checkZip\n            },\n            {\n                key: \"isPhone\",\n                f: checkPhone\n            }, \n        ];\n        var keyVal = false;\n        var key = \"\";\n        for(var i = 0; i < attrs.length; i++){\n            key = attrs[i].key;\n            keyVal = e.target.getAttribute(key);\n            if (keyVal) {\n                attrs[i].f(id, name, value);\n            }\n        }\n    });\n};\nvar validateOnSelectChange = function() {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"select\").on(\"input\", function(e) {\n        var id = e.target.id;\n        var name = e.target.name;\n        var value = e.target.value;\n        var attrs = [\n            {\n                key: \"isRequired\",\n                f: checkisRequired\n            },\n            {\n                key: \"isAlpha\",\n                f: checkAlpha\n            },\n            {\n                key: \"isNumeric\",\n                f: checkNumeric\n            },\n            {\n                key: \"isCreditCard\",\n                f: checkCreditCard\n            },\n            {\n                key: \"isCvv\",\n                f: checkCvv\n            },\n            {\n                key: \"isEmail\",\n                f: checkEmail\n            },\n            {\n                key: \"isZip\",\n                f: checkZip\n            },\n            {\n                key: \"isPhone\",\n                f: checkPhone\n            }, \n        ];\n        var keyVal = false;\n        var key = \"\";\n        for(var i = 0; i < attrs.length; i++){\n            key = attrs[i].key;\n            keyVal = e.target.getAttribute(key);\n            if (keyVal) {\n                attrs[i].f(id, name, value);\n            }\n        }\n    });\n};\nif (true) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function() {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".form-wizard-next-btn\").click(function(e) {\n            var formID = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr(\"formID\");\n            validate(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr(\"formID\"));\n            try {\n                if (validatedStatus == true) {\n                    document.getElementById(\"\".concat(formID, \"-validate-state\")).value = true;\n                } else {\n                    document.getElementById(\"\".concat(formID, \"-validate-state\")).value = false;\n                }\n            } catch (err) {}\n            moveToNextStep(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this));\n        });\n    });\n}\nvar moveToNextStep = function(e) {\n    var formID = e.attr(\"formID\");\n    var parentFieldset = e.parents(\".wizard-fieldset\");\n    var currentActiveStep = e.parents(\".form-wizard\").find(\".form-wizard-steps .active\");\n    var next = e;\n    var isvalidated = false;\n    alert(formID);\n    if (formID == \"PassValidation\") {\n        isvalidated = true;\n    } else {\n        isvalidated = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#\".concat(formID, \"-validate-state\")).val();\n    }\n    var nextWizardStep = false;\n    if (isvalidated == \"true\") {\n        nextWizardStep = true;\n    }\n    parentFieldset.find(\".wizard-required\").each(function() {\n        var thisValue = e.val();\n        if (thisValue == \"\") {\n            e.siblings(\".wizard-form-error\").slideDown();\n            nextWizardStep = false;\n        } else {\n            e.siblings(\".wizard-form-error\").slideUp();\n        }\n    });\n    if (nextWizardStep) {\n        next.parents(\".wizard-fieldset\").removeClass(\"show\", \"400\");\n        currentActiveStep.removeClass(\"active\").addClass(\"activated\").next().addClass(\"active\", \"400\");\n        next.parents(\".wizard-fieldset\").next(\".wizard-fieldset\").addClass(\"show\", \"400\");\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).find(\".wizard-fieldset\").each(function() {\n            if (e.hasClass(\"show\")) {\n                var formAtrr = e.attr(\"data-tab-content\");\n                jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).find(\".form-wizard-steps .form-wizard-step-item\").each(function() {\n                    if (e.attr(\"data-attr\") == formAtrr) {\n                        e.addClass(\"active\");\n                        var innerWidth = e.innerWidth();\n                        var position = e.position();\n                        jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).find(\".form-wizard-step-move\").css({\n                            left: position.left,\n                            width: innerWidth\n                        });\n                    } else {\n                        e.removeClass(\"active\");\n                    }\n                });\n            }\n        });\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/controllers/smartValidator.js\n");

/***/ })

});