[{"D:\\modern\\src\\pages\\account\\index.js":"1","D:\\modern\\src\\pages\\account\\LoginPopUp.js":"2","D:\\modern\\src\\pages\\api\\account\\authenticateUser.js":"3","D:\\modern\\src\\pages\\api\\account\\createAccount.js":"4","D:\\modern\\src\\pages\\api\\account\\updateAccount.js":"5","D:\\modern\\src\\pages\\api\\account\\userInfo\\[ID].js":"6","D:\\modern\\src\\pages\\api\\brand\\[slug].js":"7","D:\\modern\\src\\pages\\api\\category\\[slug].js":"8","D:\\modern\\src\\pages\\api\\collection\\[slug].js":"9","D:\\modern\\src\\pages\\api\\landing\\categories.js":"10","D:\\modern\\src\\pages\\api\\product\\realtedProducts\\[...args].js":"11","D:\\modern\\src\\pages\\api\\product\\[id].js":"12","D:\\modern\\src\\pages\\api\\search\\[slug].js":"13","D:\\modern\\src\\pages\\api\\settings\\settings.js":"14","D:\\modern\\src\\pages\\api\\taxonomy\\taxonomy.js":"15","D:\\modern\\src\\pages\\api\\wishlist\\deleteWishlists.js":"16","D:\\modern\\src\\pages\\api\\wishlist\\deleteWishlistsItem.js":"17","D:\\modern\\src\\pages\\api\\wishlist\\getUserWishLists.js":"18","D:\\modern\\src\\pages\\api\\wishlist\\index.js":"19","D:\\modern\\src\\pages\\api\\wishlist\\showListsItems.js":"20","D:\\modern\\src\\pages\\api\\wishlist\\updateWishlistsItem.js":"21","D:\\modern\\src\\pages\\browse\\brand\\[slug].js":"22","D:\\modern\\src\\pages\\browse\\collection\\[slug].js":"23","D:\\modern\\src\\pages\\browse\\search\\[slug].js":"24","D:\\modern\\src\\pages\\cart.js":"25","D:\\modern\\src\\pages\\category\\[slug].js":"26","D:\\modern\\src\\pages\\checkout.js":"27","D:\\modern\\src\\pages\\index.js":"28","D:\\modern\\src\\pages\\info\\[page].js":"29","D:\\modern\\src\\pages\\login.js":"30","D:\\modern\\src\\pages\\order.js":"31","D:\\modern\\src\\pages\\subscribe.js":"32","D:\\modern\\src\\pages\\test.js":"33","D:\\modern\\src\\pages\\test2.js":"34","D:\\modern\\src\\pages\\_app.js":"35","D:\\modern\\src\\components\\account\\BillingAddress.js":"36","D:\\modern\\src\\components\\account\\BillingAddressTab.js":"37","D:\\modern\\src\\components\\account\\Breadcrumbs.js":"38","D:\\modern\\src\\components\\account\\DisplayListItems.js":"39","D:\\modern\\src\\components\\account\\DisplayLists.js":"40","D:\\modern\\src\\components\\account\\HomeTabContent.js":"41","D:\\modern\\src\\components\\account\\Layout.js":"42","D:\\modern\\src\\components\\account\\Order.js":"43","D:\\modern\\src\\components\\account\\OrdersTabContent.js":"44","D:\\modern\\src\\components\\account\\ShippingAddress.js":"45","D:\\modern\\src\\components\\account\\ShippingAddressTab.js":"46","D:\\modern\\src\\components\\account\\TabsHeadings.js":"47","D:\\modern\\src\\components\\account\\WishListTabContent.js":"48","D:\\modern\\src\\components\\cart\\BackButton.js":"49","D:\\modern\\src\\components\\cart\\CartContent.js":"50","D:\\modern\\src\\components\\cart\\CartPopUP.js":"51","D:\\modern\\src\\components\\cart\\CartSummary.js":"52","D:\\modern\\src\\components\\cart\\CartTop.js":"53","D:\\modern\\src\\components\\cart\\EmptyCart.js":"54","D:\\modern\\src\\components\\cart\\Layout.js":"55","D:\\modern\\src\\components\\category\\BreadCrumbs.js":"56","D:\\modern\\src\\components\\category\\CategoryBanner.js":"57","D:\\modern\\src\\components\\category\\CategoryHeading.js":"58","D:\\modern\\src\\components\\category\\CurrentCount.js":"59","D:\\modern\\src\\components\\category\\Landing.js":"60","D:\\modern\\src\\components\\category\\LandingCategories.js":"61","D:\\modern\\src\\components\\category\\Layout.js":"62","D:\\modern\\src\\components\\category\\ListviewGridViewFilter.js":"63","D:\\modern\\src\\components\\category\\PaginationBottom.js":"64","D:\\modern\\src\\components\\category\\PaginationTop.js":"65","D:\\modern\\src\\components\\category\\ProductArea.js":"66","D:\\modern\\src\\components\\category\\SeoText.js":"67","D:\\modern\\src\\components\\category\\SmartSearch.js":"68","D:\\modern\\src\\components\\category\\SortByProperty.js":"69","D:\\modern\\src\\components\\category\\Thumbnail.js":"70","D:\\modern\\src\\components\\category\\ViewByNumber.js":"71","D:\\modern\\src\\components\\checkout\\BillingInfo.js":"72","D:\\modern\\src\\components\\checkout\\Cart.js":"73","D:\\modern\\src\\components\\checkout\\Heading.js":"74","D:\\modern\\src\\components\\checkout\\Layout.js":"75","D:\\modern\\src\\components\\checkout\\OrderAdditional.js":"76","D:\\modern\\src\\components\\checkout\\OrderSummary.js":"77","D:\\modern\\src\\components\\checkout\\PaymentInfo.js":"78","D:\\modern\\src\\components\\checkout\\ReturningCustomer.js":"79","D:\\modern\\src\\components\\checkout\\ShippingInfo.js":"80","D:\\modern\\src\\components\\checkout\\ShippingMethods.js":"81","D:\\modern\\src\\components\\checkout\\WizardDots.js":"82","D:\\modern\\src\\components\\footer\\CompanyIntro.js":"83","D:\\modern\\src\\components\\footer\\CustomerService.js":"84","D:\\modern\\src\\components\\footer\\Footer.js":"85","D:\\modern\\src\\components\\footer\\FooterBottom.js":"86","D:\\modern\\src\\components\\footer\\Information.js":"87","D:\\modern\\src\\components\\footer\\NewsLetter.js":"88","D:\\modern\\src\\components\\header\\DropCart.js":"89","D:\\modern\\src\\components\\header\\Header.js":"90","D:\\modern\\src\\components\\header\\Middle.js":"91","D:\\modern\\src\\components\\header\\Nav.js":"92","D:\\modern\\src\\components\\header\\Top.js":"93","D:\\modern\\src\\components\\home\\BrandSlider.js":"94","D:\\modern\\src\\components\\home\\CompanyIntroduction.js":"95","D:\\modern\\src\\components\\home\\IndexSlider.js":"96","D:\\modern\\src\\components\\home\\Layout.js":"97","D:\\modern\\src\\components\\home\\MiniBanner1.js":"98","D:\\modern\\src\\components\\home\\MiniBanner2.js":"99","D:\\modern\\src\\components\\home\\MiniBanner3.js":"100","D:\\modern\\src\\components\\login\\Athenticated.js":"101","D:\\modern\\src\\components\\login\\CreateAccount.js":"102","D:\\modern\\src\\components\\login\\Heading.js":"103","D:\\modern\\src\\components\\login\\Layout.js":"104","D:\\modern\\src\\components\\login\\LoginScreen.js":"105","D:\\modern\\src\\components\\product\\AdditionalInformation.js":"106","D:\\modern\\src\\components\\product\\AddtoCartArea.js":"107","D:\\modern\\src\\components\\product\\AltImages.js":"108","D:\\modern\\src\\components\\product\\BreadCrumbs.js":"109","D:\\modern\\src\\components\\product\\MainImage.js":"110","D:\\modern\\src\\components\\product\\ProductInfo.js":"111","D:\\modern\\src\\components\\product\\ProductPrice.js":"112","D:\\modern\\src\\components\\product\\ProductSwap.js":"113","D:\\modern\\src\\components\\product\\RelatedProducts.js":"114","D:\\modern\\src\\components\\product\\WishListPopUp.js":"115","D:\\modern\\src\\components\\sidenav\\SelectedFilters.js":"116","D:\\modern\\src\\components\\sidenav\\ShopByAvailability.js":"117","D:\\modern\\src\\components\\sidenav\\ShopByCategory.js":"118","D:\\modern\\src\\components\\sidenav\\ShopByDynamicAttribute.js":"119","D:\\modern\\src\\components\\sidenav\\Sidenav.js":"120","D:\\modern\\src\\pages\\api\\orders\\createOrder.js":"121","D:\\modern\\src\\pages\\api\\orders\\getOrdersByID.js":"122","D:\\modern\\src\\pages\\api\\orders\\getOrdersList.js":"123","D:\\modern\\src\\pages\\api\\payment\\authorize.net\\create-order.js":"124","D:\\modern\\src\\pages\\api\\payment\\paypal\\cancel-payment.js":"125","D:\\modern\\src\\pages\\api\\payment\\paypal\\capture-order.js":"126","D:\\modern\\src\\pages\\api\\payment\\paypal\\create-order.js":"127","D:\\modern\\src\\pages\\error\\index.js":"128","D:\\modern\\src\\pages\\home.js":"129","D:\\modern\\src\\pages\\orders\\[id].js":"130","D:\\modern\\src\\pages\\paypal\\[payment].js":"131","D:\\modern\\src\\pages\\thank-you.js":"132","D:\\modern\\src\\components\\thankYou\\Contact.js":"133","D:\\modern\\src\\components\\thankYou\\Items.js":"134","D:\\modern\\src\\components\\thankYou\\TopCreditCard.js":"135","D:\\modern\\src\\components\\thankYou\\TopPaypal.js":"136","D:\\modern\\src\\pages\\products\\[[...slug]].js":"137"},{"size":2588,"mtime":1651071491826,"results":"138","hashOfConfig":"139"},{"size":25989,"mtime":1651181302809,"results":"140","hashOfConfig":"139"},{"size":1010,"mtime":1651064950605,"results":"141","hashOfConfig":"139"},{"size":1871,"mtime":1649780090885,"results":"142","hashOfConfig":"139"},{"size":1085,"mtime":1650552038656,"results":"143","hashOfConfig":"139"},{"size":751,"mtime":1649072584771,"results":"144","hashOfConfig":"139"},{"size":402,"mtime":1650644795036,"results":"145","hashOfConfig":"139"},{"size":402,"mtime":1650644740273,"results":"146","hashOfConfig":"139"},{"size":413,"mtime":1650644803372,"results":"147","hashOfConfig":"139"},{"size":378,"mtime":1650644813653,"results":"148","hashOfConfig":"139"},{"size":872,"mtime":1649072551616,"results":"149","hashOfConfig":"139"},{"size":686,"mtime":1651183885690,"results":"150","hashOfConfig":"139"},{"size":359,"mtime":1649072540871,"results":"151","hashOfConfig":"139"},{"size":411,"mtime":1650644830717,"results":"152","hashOfConfig":"139"},{"size":605,"mtime":1651055686520,"results":"153","hashOfConfig":"139"},{"size":842,"mtime":1648510404839,"results":"154","hashOfConfig":"139"},{"size":444,"mtime":1648559635940,"results":"155","hashOfConfig":"139"},{"size":618,"mtime":1648928855369,"results":"156","hashOfConfig":"139"},{"size":2613,"mtime":1648508685925,"results":"157","hashOfConfig":"139"},{"size":718,"mtime":1648510425676,"results":"158","hashOfConfig":"139"},{"size":444,"mtime":1648559635940,"results":"159","hashOfConfig":"139"},{"size":9752,"mtime":1651147278263,"results":"160","hashOfConfig":"139"},{"size":9775,"mtime":1651147255803,"results":"161","hashOfConfig":"139"},{"size":9748,"mtime":1651147237400,"results":"162","hashOfConfig":"139"},{"size":2723,"mtime":1651071386978,"results":"163","hashOfConfig":"139"},{"size":10307,"mtime":1651182575189,"results":"164","hashOfConfig":"139"},{"size":3984,"mtime":1651071369346,"results":"165","hashOfConfig":"139"},{"size":1145,"mtime":1651230375811,"results":"166","hashOfConfig":"139"},{"size":1236,"mtime":1651071448048,"results":"167","hashOfConfig":"139"},{"size":972,"mtime":1651071337403,"results":"168","hashOfConfig":"139"},{"size":1604,"mtime":1649680256511,"results":"169","hashOfConfig":"139"},{"size":927,"mtime":1648066254174,"results":"170","hashOfConfig":"139"},{"size":211,"mtime":1648571569186,"results":"171","hashOfConfig":"139"},{"size":8483,"mtime":1647608328262,"results":"172","hashOfConfig":"139"},{"size":4185,"mtime":1651230797589,"results":"173","hashOfConfig":"139"},{"size":24266,"mtime":1651230847891,"results":"174","hashOfConfig":"139"},{"size":578,"mtime":1649092087009,"results":"175","hashOfConfig":"139"},{"size":668,"mtime":1649357459121,"results":"176","hashOfConfig":"139"},{"size":6056,"mtime":1648931037576,"results":"177","hashOfConfig":"139"},{"size":5187,"mtime":1649084617784,"results":"178","hashOfConfig":"139"},{"size":1384,"mtime":1648820076000,"results":"179","hashOfConfig":"139"},{"size":2414,"mtime":1649798787279,"results":"180","hashOfConfig":"139"},{"size":2997,"mtime":1651230916835,"results":"181","hashOfConfig":"139"},{"size":478,"mtime":1649798802610,"results":"182","hashOfConfig":"139"},{"size":23632,"mtime":1650632234355,"results":"183","hashOfConfig":"139"},{"size":563,"mtime":1649091930341,"results":"184","hashOfConfig":"139"},{"size":4488,"mtime":1649797186155,"results":"185","hashOfConfig":"139"},{"size":677,"mtime":1648640142013,"results":"186","hashOfConfig":"139"},{"size":965,"mtime":1648660918000,"results":"187","hashOfConfig":"139"},{"size":5008,"mtime":1651172408051,"results":"188","hashOfConfig":"139"},{"size":6507,"mtime":1649956224670,"results":"189","hashOfConfig":"139"},{"size":1706,"mtime":1650912385488,"results":"190","hashOfConfig":"139"},{"size":987,"mtime":1649442691816,"results":"191","hashOfConfig":"139"},{"size":1424,"mtime":1649760812997,"results":"192","hashOfConfig":"139"},{"size":618,"mtime":1650912410322,"results":"193","hashOfConfig":"139"},{"size":1466,"mtime":1648660663083,"results":"194","hashOfConfig":"139"},{"size":1186,"mtime":1648660690522,"results":"195","hashOfConfig":"139"},{"size":873,"mtime":1647608238620,"results":"196","hashOfConfig":"139"},{"size":455,"mtime":1651009743060,"results":"197","hashOfConfig":"139"},{"size":687,"mtime":1651006136408,"results":"198","hashOfConfig":"139"},{"size":2004,"mtime":1651006155228,"results":"199","hashOfConfig":"139"},{"size":2246,"mtime":1651009880062,"results":"200","hashOfConfig":"139"},{"size":1061,"mtime":1648571256627,"results":"201","hashOfConfig":"139"},{"size":829,"mtime":1651060443319,"results":"202","hashOfConfig":"139"},{"size":817,"mtime":1651009278286,"results":"203","hashOfConfig":"139"},{"size":3746,"mtime":1651060427034,"results":"204","hashOfConfig":"139"},{"size":1614,"mtime":1651182786551,"results":"205","hashOfConfig":"139"},{"size":951,"mtime":1650976989649,"results":"206","hashOfConfig":"139"},{"size":1284,"mtime":1647261799924,"results":"207","hashOfConfig":"139"},{"size":7921,"mtime":1651172572300,"results":"208","hashOfConfig":"139"},{"size":715,"mtime":1651060383874,"results":"209","hashOfConfig":"139"},{"size":17429,"mtime":1650558510267,"results":"210","hashOfConfig":"139"},{"size":22985,"mtime":1651172367717,"results":"211","hashOfConfig":"139"},{"size":295,"mtime":1648746168786,"results":"212","hashOfConfig":"139"},{"size":4518,"mtime":1651074682087,"results":"213","hashOfConfig":"139"},{"size":1825,"mtime":1648766704521,"results":"214","hashOfConfig":"139"},{"size":6964,"mtime":1650974069817,"results":"215","hashOfConfig":"139"},{"size":6380,"mtime":1650633119732,"results":"216","hashOfConfig":"139"},{"size":3660,"mtime":1649680943704,"results":"217","hashOfConfig":"139"},{"size":15115,"mtime":1650632800538,"results":"218","hashOfConfig":"139"},{"size":3942,"mtime":1650557874230,"results":"219","hashOfConfig":"139"},{"size":4137,"mtime":1650561318769,"results":"220","hashOfConfig":"139"},{"size":1221,"mtime":1648829018852,"results":"221","hashOfConfig":"139"},{"size":940,"mtime":1648829034782,"results":"222","hashOfConfig":"139"},{"size":674,"mtime":1647607126118,"results":"223","hashOfConfig":"139"},{"size":1547,"mtime":1649172822334,"results":"224","hashOfConfig":"139"},{"size":819,"mtime":1648829048027,"results":"225","hashOfConfig":"139"},{"size":1601,"mtime":1651230941434,"results":"226","hashOfConfig":"139"},{"size":10254,"mtime":1651057795098,"results":"227","hashOfConfig":"139"},{"size":393,"mtime":1650977721553,"results":"228","hashOfConfig":"139"},{"size":4271,"mtime":1651230968510,"results":"229","hashOfConfig":"139"},{"size":3698,"mtime":1651059676066,"results":"230","hashOfConfig":"139"},{"size":1463,"mtime":1651230977488,"results":"231","hashOfConfig":"139"},{"size":6405,"mtime":1651172199363,"results":"232","hashOfConfig":"139"},{"size":1290,"mtime":1651181008982,"results":"233","hashOfConfig":"139"},{"size":4821,"mtime":1651230989973,"results":"234","hashOfConfig":"139"},{"size":746,"mtime":1650977761634,"results":"235","hashOfConfig":"139"},{"size":758,"mtime":1651172225963,"results":"236","hashOfConfig":"139"},{"size":730,"mtime":1651172232178,"results":"237","hashOfConfig":"139"},{"size":844,"mtime":1651172239045,"results":"238","hashOfConfig":"139"},{"size":1717,"mtime":1649548585197,"results":"239","hashOfConfig":"139"},{"size":13426,"mtime":1650544577815,"results":"240","hashOfConfig":"139"},{"size":103,"mtime":1650483953531,"results":"241","hashOfConfig":"139"},{"size":919,"mtime":1650484004282,"results":"242","hashOfConfig":"139"},{"size":2766,"mtime":1650972526332,"results":"243","hashOfConfig":"139"},{"size":6669,"mtime":1649679669862,"results":"244","hashOfConfig":"139"},{"size":2822,"mtime":1649956216234,"results":"245","hashOfConfig":"139"},{"size":1167,"mtime":1647859239252,"results":"246","hashOfConfig":"139"},{"size":442,"mtime":1649265710422,"results":"247","hashOfConfig":"139"},{"size":639,"mtime":1651172254213,"results":"248","hashOfConfig":"139"},{"size":2270,"mtime":1651172267891,"results":"249","hashOfConfig":"139"},{"size":612,"mtime":1649257987703,"results":"250","hashOfConfig":"139"},{"size":1210,"mtime":1649258034400,"results":"251","hashOfConfig":"139"},{"size":5890,"mtime":1651172284778,"results":"252","hashOfConfig":"139"},{"size":8752,"mtime":1649540776418,"results":"253","hashOfConfig":"139"},{"size":2871,"mtime":1651060023038,"results":"254","hashOfConfig":"139"},{"size":2609,"mtime":1649349137378,"results":"255","hashOfConfig":"139"},{"size":2310,"mtime":1651060259143,"results":"256","hashOfConfig":"139"},{"size":4427,"mtime":1649348904167,"results":"257","hashOfConfig":"139"},{"size":3503,"mtime":1651060244971,"results":"258","hashOfConfig":"139"},{"size":927,"mtime":1649789385180,"results":"259","hashOfConfig":"139"},{"size":779,"mtime":1649856379674,"results":"260","hashOfConfig":"139"},{"size":641,"mtime":1649799782257,"results":"261","hashOfConfig":"139"},{"size":3531,"mtime":1650456980667,"results":"262","hashOfConfig":"139"},{"size":80,"mtime":1649694060336,"results":"263","hashOfConfig":"139"},{"size":678,"mtime":1649762779103,"results":"264","hashOfConfig":"139"},{"size":1998,"mtime":1649870147077,"results":"265","hashOfConfig":"139"},{"size":1160,"mtime":1651230328627,"results":"266","hashOfConfig":"139"},{"size":15019,"mtime":1647608440814,"results":"267","hashOfConfig":"139"},{"size":9620,"mtime":1651230498539,"results":"268","hashOfConfig":"139"},{"size":2531,"mtime":1651230534742,"results":"269","hashOfConfig":"139"},{"size":7866,"mtime":1651230696012,"results":"270","hashOfConfig":"139"},{"size":116,"mtime":1649959496762,"results":"271","hashOfConfig":"139"},{"size":110,"mtime":1649959503009,"results":"272","hashOfConfig":"139"},{"size":3509,"mtime":1650652285606,"results":"273","hashOfConfig":"139"},{"size":3742,"mtime":1650652278679,"results":"274","hashOfConfig":"139"},{"size":6402,"mtime":1651229358240,"results":"275","hashOfConfig":"139"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},"1gt4i48",{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437"},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445"},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","suppressedMessages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","suppressedMessages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","suppressedMessages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474"},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","suppressedMessages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","suppressedMessages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528"},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544"},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548"},{"filePath":"549","messages":"550","suppressedMessages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555"},{"filePath":"556","messages":"557","suppressedMessages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559"},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"567","messages":"568","suppressedMessages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","suppressedMessages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"573","messages":"574","suppressedMessages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","suppressedMessages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","suppressedMessages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","suppressedMessages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630"},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634"},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662"},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","suppressedMessages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","suppressedMessages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","suppressedMessages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","suppressedMessages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","suppressedMessages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","suppressedMessages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","suppressedMessages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","suppressedMessages":"692","errorCount":4,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"693","messages":"694","suppressedMessages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"696","messages":"697","suppressedMessages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"699","messages":"700","suppressedMessages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","suppressedMessages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","suppressedMessages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","suppressedMessages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","suppressedMessages":"713","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714"},"D:\\modern\\src\\pages\\account\\index.js",["715","716","717"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Head from \"next/head\";\r\nimport $ from \"jquery\";\r\nimport { getUserWishLists } from \"../../controllers/wishlist\";\r\nimport { getAccountcripts } from \"../../assets/js/main\";\r\nimport Layout from \"../../components/account/Layout\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\n\r\nconst Account = (props) => {\r\n  const [userData, setUserData] = useState([]);\r\n  const [currentTab, setCurrentTab] = useState(\"home\");\r\n\r\n  const [userLists, setUserLists] = useState([]);\r\n  const [listName, setListName] = useState(\"\");\r\n\r\n  const [wishListItems, setWishListItems] = useState([]);\r\n\r\n  let loginstatus = \"\";\r\n  let currentUserID = 0;\r\n  if (typeof window != \"undefined\") {\r\n    loginstatus = localStorage.getItem(\"isLogin\");\r\n    currentUserID = localStorage.getItem(\"currentAliveUser\");\r\n  }\r\n\r\n  if (typeof window != \"undefined\") {\r\n    getAccountcripts($);\r\n  }\r\n  let userID = \"\";\r\n\r\n  if (typeof window != \"undefined\") {\r\n    userID = localStorage.getItem(\"currentAliveUser\");\r\n  }\r\n\r\n  useEffect(async () => {\r\n    let lists = await getUserWishLists(userID);\r\n    setUserLists(lists);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let currentListItems = [];\r\n    currentListItems = userLists.filter(\r\n      (list) => list.userID === userID && list.name == listName\r\n    );\r\n\r\n    setWishListItems(currentListItems);\r\n  }, [listName, userLists]);\r\n\r\n  let cartValue = [];\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>My Account | Optimized and SEO Friendly Demo Site</title>\r\n        <meta\r\n          name=\"title\"\r\n          content=\"My Account | Optimized and SEO Friendly Demo Site\"\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"My Account of Optimized and SEO Friendly Ecommerce site that will boost your sales and conversions\"\r\n        />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"ecommerce, modern, SEO friendly, cumulus\"\r\n        />\r\n      </Head>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n      <Layout\r\n        userData={userData}\r\n        setUserData={setUserData}\r\n        currentTab={currentTab}\r\n        setCurrentTab={setCurrentTab}\r\n        userLists={userLists}\r\n        setUserLists={setUserLists}\r\n        listName={listName}\r\n        setListName={setListName}\r\n        wishListItems={wishListItems}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","D:\\modern\\src\\pages\\account\\LoginPopUp.js",["718"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Router from \"next/router\";\r\nimport { getContinueShoppingURL } from \"../../controllers/cart\";\r\nimport {\r\n  authenticateUser,\r\n  createAccountHandle,\r\n  CreateUser,\r\n  resetScreen,\r\n} from \"../../controllers/account\";\r\n\r\nimport {\r\n  autoValidate,\r\n  validatedStatus,\r\n  validate,\r\n} from \"../../controllers/smartValidator\";\r\n\r\nconst LoginPopUp = (props) => {\r\n  autoValidate();\r\n  const [isLogin, setIsLogin] = useState(\"no\");\r\n  let loginstatus = \"\";\r\n  try {\r\n    loginstatus = localStorage.getItem(\"isLogin\");\r\n  } catch (err) {}\r\n\r\n  useEffect(() => {\r\n    setIsLogin(loginstatus);\r\n  }, []);\r\n\r\n  const [screen, setScreen] = useState(\"login\");\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"loginModal\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"loginModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div\r\n        className=\"modal-dialog modal-lg modal-dialog-centered\"\r\n        role=\"document\"\r\n      >\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header border-bottom-0\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              onClick={() => {\r\n                resetScreen(setScreen, loginstatus);\r\n              }}\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <section>\r\n            <div className=\"container\">\r\n              {screen && screen == \"authenticated\" ? (\r\n                <>\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"form-inner\">\r\n                      <div className=\"form-group\">\r\n                        <div className=\"alert alert-primary\" role=\"alert\">\r\n                          Logged in Successfully. Please choose one of below\r\n                          actions\r\n                        </div>\r\n\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                          <div className=\"col-3  \">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => {\r\n                                Router.push(\"/account\");\r\n                              }}\r\n                              data-dismiss=\"modal\"\r\n                            >\r\n                              Account\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"col-3 \">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-secondary\"\r\n                              onClick={() => {\r\n                                Router.push(\"/checkout\");\r\n                              }}\r\n                              data-dismiss=\"modal\"\r\n                            >\r\n                              Checkout\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"col-6 \">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-success\"\r\n                              onClick={() => {\r\n                                let shopURL = \"/\";\r\n                                if (!shopURL) {\r\n                                  shopURL = \"/\";\r\n                                }\r\n                                shopURL = getContinueShoppingURL();\r\n                                Router.push(shopURL);\r\n                              }}\r\n                              data-dismiss=\"modal\"\r\n                            >\r\n                              Continue Shopping\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : screen && screen == \"login\" ? (\r\n                <div className=\"modal-body\">\r\n                  <div className=\"form-inner\">\r\n                    <div className=\"form-group\">\r\n                      <h2>sign in</h2>\r\n                    </div>\r\n                    <form name=\"logimPopUpForm\" id=\"logimPopUpForm\">\r\n                      <div className=\"form-group\">\r\n                        <label className=\"loginLabel\" title=\"login_email\">\r\n                          Email Address: <span className=\"required\">*</span>\r\n                        </label>\r\n                        <br clear=\"all\" />\r\n                        <input\r\n                          className=\"loginInput form-control\"\r\n                          placeholder=\"Your Email\"\r\n                          type=\"text\"\r\n                          id=\"login_email\"\r\n                          name=\"Email\"\r\n                          isEmail=\"true\"\r\n                        />\r\n                        <div\r\n                          id=\"login_email-error\"\r\n                          className=\"text-danger\"\r\n                        ></div>\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          className=\"loginInput form-control\"\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          id=\"login_password\"\r\n                          name=\"Password\"\r\n                          isRequired=\"true\"\r\n                        />\r\n                        <div\r\n                          id=\"login_password-error\"\r\n                          className=\"text-danger\"\r\n                        ></div>\r\n                      </div>\r\n                    </form>\r\n                    <div className=\"form-group d-flex w-100 flex-column justify-content-center align-items-center\">\r\n                      <button\r\n                        onClick={(e) => {\r\n                          validate(\"logimPopUpForm\");\r\n                          if (validatedStatus == true) {\r\n                            authenticateUser(e, setScreen);\r\n                          }\r\n                        }}\r\n                        className=\"btn btn-dark mybtn w-100\"\r\n                      >\r\n                        Sign in\r\n                      </button>\r\n                      <a href=\"\" className=\"btn\">\r\n                        Forgot password\r\n                      </a>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <div className=\"d-flex w-100 flex-column justify-content-center align-items-center\">\r\n                        <h3>Sign Up</h3>\r\n                        <p>You can now easily set up an account</p>\r\n                        <button\r\n                          className=\"btn btn-secondary mybtn w-100\"\r\n                          onClick={(e) => {\r\n                            createAccountHandle(e, setScreen);\r\n                          }}\r\n                        >\r\n                          Create an Account\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      id=\"login-user\"\r\n                      className=\"alert   d-none\"\r\n                      role=\"alert\"\r\n                    >\r\n                      ssss\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"modal-body\">\r\n                  <form name=\"newUserPopUpForm\" id=\"newUserPopUpForm\">\r\n                    <h5 className=\"modal-title\" id=\"\">\r\n                      Login Credientials:{\" \"}\r\n                    </h5>\r\n                    <br clear=\"all\" />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"email\">\r\n                            Email Address: <span className=\"required\">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"text\"\r\n                            id=\"new-email\"\r\n                            name=\"Email\"\r\n                            isEmail=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-email-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12 col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"email\">\r\n                            Password: <span className=\"required\">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"password\"\r\n                            id=\"new-password\"\r\n                            name=\"Passwrd\"\r\n                            isRequired=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-password-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                    <br clear=\"all\" />\r\n                    <h5 className=\"modal-title\" id=\"\">\r\n                      Billing Address:{\" \"}\r\n                    </h5>\r\n                    <br clear=\"all\" />\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"first_name\">\r\n                            First Name: <span className=\"required \">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"text\"\r\n                            id=\"new-fname\"\r\n                            name=\"First Name\"\r\n                            isAlpha=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-fname-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"last_name\">\r\n                            Last Name: <span className=\"required\">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"text\"\r\n                            id=\"new-lname\"\r\n                            isAlpha=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-lname-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"phone\">\r\n                            Phone: <span className=\"required\">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"text\"\r\n                            id=\"new-phone\"\r\n                            name=\"Phone\"\r\n                            isPhone=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-phone-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12 col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"address1\">\r\n                            Street: <span className=\"required\">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"text\"\r\n                            id=\"new-address1\"\r\n                            name=\"Street\"\r\n                            isRequired=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-address1-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"address2\">\r\n                            Unit/Suite:\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"text\"\r\n                            id=\"new-address2\"\r\n                            name=\"Unit/Suite\"\r\n                            isRequired=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-address2-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"city\">\r\n                            City: <span className=\"required\">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"text\"\r\n                            id=\"new-city\"\r\n                            name=\"City\"\r\n                            isRequired=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-city-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"state\">\r\n                            State: <span className=\"required\">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <select\r\n                            className=\"loginSelect form-control\"\r\n                            name=\"State\"\r\n                            id=\"new-state\"\r\n                            isRequired=\"true\"\r\n                          >\r\n                            <option value=\"\">--</option>\r\n\r\n                            <option value=\"AL\" data-type=\"STATE\">\r\n                              Alabama\r\n                            </option>\r\n\r\n                            <option value=\"AK\" data-type=\"STATE\">\r\n                              Alaska\r\n                            </option>\r\n\r\n                            <option value=\"AZ\" data-type=\"STATE\">\r\n                              Arizona\r\n                            </option>\r\n\r\n                            <option value=\"AR\" data-type=\"STATE\">\r\n                              Arkansas\r\n                            </option>\r\n\r\n                            <option value=\"CA\" data-type=\"STATE\">\r\n                              California\r\n                            </option>\r\n\r\n                            <option value=\"CO\" data-type=\"STATE\">\r\n                              Colorado\r\n                            </option>\r\n\r\n                            <option value=\"CT\" data-type=\"STATE\">\r\n                              Connecticut\r\n                            </option>\r\n\r\n                            <option value=\"DE\" data-type=\"STATE\">\r\n                              Delaware\r\n                            </option>\r\n\r\n                            <option value=\"DC\" data-type=\"STATE\">\r\n                              District of Columbia\r\n                            </option>\r\n\r\n                            <option value=\"FL\" data-type=\"STATE\">\r\n                              Florida\r\n                            </option>\r\n\r\n                            <option value=\"GA\" data-type=\"STATE\">\r\n                              Georgia\r\n                            </option>\r\n\r\n                            <option value=\"ID\" data-type=\"STATE\">\r\n                              Idaho\r\n                            </option>\r\n\r\n                            <option value=\"IL\" data-type=\"STATE\">\r\n                              Illinois\r\n                            </option>\r\n\r\n                            <option value=\"IN\" data-type=\"STATE\">\r\n                              Indiana\r\n                            </option>\r\n\r\n                            <option value=\"IA\" data-type=\"STATE\">\r\n                              Iowa\r\n                            </option>\r\n\r\n                            <option value=\"KS\" data-type=\"STATE\">\r\n                              Kansas\r\n                            </option>\r\n\r\n                            <option value=\"KY\" data-type=\"STATE\">\r\n                              Kentucky\r\n                            </option>\r\n\r\n                            <option value=\"LA\" data-type=\"STATE\">\r\n                              Louisiana\r\n                            </option>\r\n\r\n                            <option value=\"ME\" data-type=\"STATE\">\r\n                              Maine\r\n                            </option>\r\n\r\n                            <option value=\"MD\" data-type=\"STATE\">\r\n                              Maryland\r\n                            </option>\r\n\r\n                            <option value=\"MA\" data-type=\"STATE\">\r\n                              Massachusetts\r\n                            </option>\r\n\r\n                            <option value=\"MI\" data-type=\"STATE\">\r\n                              Michigan\r\n                            </option>\r\n\r\n                            <option value=\"MN\" data-type=\"STATE\">\r\n                              Minnesota\r\n                            </option>\r\n\r\n                            <option value=\"MS\" data-type=\"STATE\">\r\n                              Mississippi\r\n                            </option>\r\n\r\n                            <option value=\"MO\" data-type=\"STATE\">\r\n                              Missouri\r\n                            </option>\r\n\r\n                            <option value=\"MT\" data-type=\"STATE\">\r\n                              Montana\r\n                            </option>\r\n\r\n                            <option value=\"NE\" data-type=\"STATE\">\r\n                              Nebraska\r\n                            </option>\r\n\r\n                            <option value=\"NV\" data-type=\"STATE\">\r\n                              Nevada\r\n                            </option>\r\n\r\n                            <option value=\"NH\" data-type=\"STATE\">\r\n                              New Hampshire\r\n                            </option>\r\n\r\n                            <option value=\"NJ\" data-type=\"STATE\">\r\n                              New Jersey\r\n                            </option>\r\n\r\n                            <option value=\"NM\" data-type=\"STATE\">\r\n                              New Mexico\r\n                            </option>\r\n\r\n                            <option value=\"NY\" data-type=\"STATE\">\r\n                              New York\r\n                            </option>\r\n\r\n                            <option value=\"NC\" data-type=\"STATE\">\r\n                              North Carolina\r\n                            </option>\r\n\r\n                            <option value=\"ND\" data-type=\"STATE\">\r\n                              North Dakota\r\n                            </option>\r\n\r\n                            <option value=\"OH\" data-type=\"STATE\">\r\n                              Ohio\r\n                            </option>\r\n\r\n                            <option value=\"OK\" data-type=\"STATE\">\r\n                              Oklahoma\r\n                            </option>\r\n\r\n                            <option value=\"OR\" data-type=\"STATE\">\r\n                              Oregon\r\n                            </option>\r\n\r\n                            <option value=\"PA\" data-type=\"STATE\">\r\n                              Pennsylvania\r\n                            </option>\r\n\r\n                            <option value=\"RI\" data-type=\"STATE\">\r\n                              Rhode Island\r\n                            </option>\r\n\r\n                            <option value=\"SC\" data-type=\"STATE\">\r\n                              South Carolina\r\n                            </option>\r\n\r\n                            <option value=\"SD\" data-type=\"STATE\">\r\n                              South Dakota\r\n                            </option>\r\n\r\n                            <option value=\"TN\" data-type=\"STATE\">\r\n                              Tennessee\r\n                            </option>\r\n\r\n                            <option value=\"TX\" data-type=\"STATE\">\r\n                              Texas\r\n                            </option>\r\n\r\n                            <option value=\"UT\" data-type=\"STATE\">\r\n                              Utah\r\n                            </option>\r\n\r\n                            <option value=\"VT\" data-type=\"STATE\">\r\n                              Vermont\r\n                            </option>\r\n\r\n                            <option value=\"VA\" data-type=\"STATE\">\r\n                              Virginia\r\n                            </option>\r\n\r\n                            <option value=\"WA\" data-type=\"STATE\">\r\n                              Washington\r\n                            </option>\r\n\r\n                            <option value=\"WV\" data-type=\"STATE\">\r\n                              West Virginia\r\n                            </option>\r\n\r\n                            <option value=\"WI\" data-type=\"STATE\">\r\n                              Wisconsin\r\n                            </option>\r\n\r\n                            <option value=\"WY\" data-type=\"STATE\">\r\n                              Wyoming\r\n                            </option>\r\n                          </select>\r\n                          <div\r\n                            id=\"new-state-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label className=\"loginLabel\" title=\"zip\">\r\n                            Zip Code: <span className=\"required\">*</span>\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n                          <input\r\n                            className=\"loginInput form-control\"\r\n                            type=\"text\"\r\n                            id=\"new-zcode\"\r\n                            name=\"zip\"\r\n                            isZip=\"true\"\r\n                          />\r\n                          <div\r\n                            id=\"new-zcode-error\"\r\n                            className=\"text-danger\"\r\n                          ></div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <label\r\n                            title=\"emailAddress\"\r\n                            className=\"loginLabel form-label\"\r\n                          >\r\n                            Country:*\r\n                          </label>\r\n                          <br clear=\"all\" />\r\n\r\n                          <select\r\n                            name=\"Country\"\r\n                            className=\"loginSelect\"\r\n                            id=\"country\"\r\n                            isRequired=\"true\"\r\n                          >\r\n                            <option value=\"\">Country</option>\r\n                            <option value=\"US\">United States</option>\r\n                          </select>\r\n                          <div id=\"country-error\" className=\"text-danger\"></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      className=\"btn btn-dark mybtn\"\r\n                      onClick={(e) => {\r\n                        validate(\"newUserPopUpForm\");\r\n                        if (validatedStatus == true) {\r\n                          CreateUser(e, setScreen);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Create Account\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-secondary mybtn\"\r\n                      data-dismiss=\"modal\"\r\n                      onClick={() => {\r\n                        resetScreen(setScreen);\r\n                      }}\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                  <div\r\n                    id=\"create-user\"\r\n                    className=\"alert   d-none\"\r\n                    role=\"alert\"\r\n                  ></div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPopUp;\r\n","D:\\modern\\src\\pages\\api\\account\\authenticateUser.js",[],[],"D:\\modern\\src\\pages\\api\\account\\createAccount.js",[],[],"D:\\modern\\src\\pages\\api\\account\\updateAccount.js",[],[],"D:\\modern\\src\\pages\\api\\account\\userInfo\\[ID].js",[],[],"D:\\modern\\src\\pages\\api\\brand\\[slug].js",[],[],"D:\\modern\\src\\pages\\api\\category\\[slug].js",[],[],"D:\\modern\\src\\pages\\api\\collection\\[slug].js",[],[],"D:\\modern\\src\\pages\\api\\landing\\categories.js",[],[],"D:\\modern\\src\\pages\\api\\product\\realtedProducts\\[...args].js",[],[],"D:\\modern\\src\\pages\\api\\product\\[id].js",[],[],"D:\\modern\\src\\pages\\api\\search\\[slug].js",[],[],"D:\\modern\\src\\pages\\api\\settings\\settings.js",[],[],"D:\\modern\\src\\pages\\api\\taxonomy\\taxonomy.js",[],[],"D:\\modern\\src\\pages\\api\\wishlist\\deleteWishlists.js",[],[],"D:\\modern\\src\\pages\\api\\wishlist\\deleteWishlistsItem.js",[],[],"D:\\modern\\src\\pages\\api\\wishlist\\getUserWishLists.js",[],[],"D:\\modern\\src\\pages\\api\\wishlist\\index.js",[],[],"D:\\modern\\src\\pages\\api\\wishlist\\showListsItems.js",[],[],"D:\\modern\\src\\pages\\api\\wishlist\\updateWishlistsItem.js",[],[],"D:\\modern\\src\\pages\\browse\\brand\\[slug].js",["719","720"],[],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport Head from \"next/head\";\r\n\r\nimport Layout from \"../../../components/category/Layout\";\r\nimport {\r\n  avaialbilityFilter,\r\n  GetProducts,\r\n  GetUrlData,\r\n  GetUrlTaxonomy,\r\n  liveProdsRGXSearch,\r\n  LoadSettings,\r\n  PaginationCalc,\r\n  setInitAvailable,\r\n  SortProducts,\r\n} from \"../../../controllers/category\";\r\nimport Header from \"../../../components/header/Header\";\r\nimport Footer from \"../../../components/footer/Footer\";\r\n\r\nconst Category = (props) => {\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n  let taxanomy = props.taxonomy;\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"shop\", `/browse/brand/${slug}`);\r\n  }, [slug]);\r\n\r\n  const [allProducts, setAllProducts] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [level, setLevel] = useState(0);\r\n  const [property, setProperty] = useState(\"default\");\r\n  const [listGridViews, setListGridViews] = useState(\"\");\r\n  const [checkAvailability, setCheckAvailability] = useState(\"all-items\");\r\n  const [uData, setUData] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const [seoH1Text, setseoH1Text] = useState(\"\");\r\n  const [setLongText, setSeoLongText] = useState(\"\");\r\n\r\n  const [sortDefault, setSortDefault] = useState(\"\");\r\n  const [sortNewestStatus, setSortNewestStatus] = useState(\"\");\r\n  const [sortBrandStatus, setSortBrandStatus] = useState(\"\");\r\n\r\n  const [cProducts, setCProducts] = useState([]);\r\n  const [allFilters, setAllFilters] = useState([]);\r\n\r\n  //HOOK FOR PERPAGE PRODUCTS\r\n  const [perpageProductscount, setPerpageProductscount] = useState(18);\r\n  //HOOK FOR ACTIVE PAGE\r\n  const [activePage, setCurrentPage] = useState(1);\r\n  //PRODUCTS PER PAGE\r\n\r\n  let productsPerPage = perpageProductscount;\r\n\r\n  let urlTaxonomy = useMemo(() => {}, []);\r\n\r\n  let urlData = [];\r\n  let { products, settingsData, categoryMode, landingCategories } = props.data;\r\n\r\n  categoryMode = \"category\";\r\n\r\n  let temProducts = [];\r\n  let entryTime = \"Y\";\r\n\r\n  // START EXTRACT SETTINGS DATA\r\n\r\n  LoadSettings(\r\n    settingsData,\r\n    setSortBrandStatus,\r\n    setSortNewestStatus,\r\n    setCheckAvailability,\r\n    setSortDefault,\r\n    useEffect\r\n  );\r\n  // END EXTRACT SETTINGS DATA\r\n\r\n  urlTaxonomy = GetUrlTaxonomy(taxanomy, slug);\r\n\r\n  setInitAvailable(checkAvailability, setCheckAvailability);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (urlTaxonomy.typ.toUpperCase() == \"EMPTY\") {\r\n        setLevel(1);\r\n      } else {\r\n        setLevel(2);\r\n      }\r\n    } catch (err) {\r\n      setLevel(0);\r\n    }\r\n  }, [urlTaxonomy]);\r\n\r\n  useEffect(() => {\r\n    GetUrlData(urlTaxonomy, taxanomy).then((data) => {\r\n      setUData(data);\r\n    });\r\n  }, [taxanomy, urlTaxonomy]);\r\n\r\n  // START DISPLAY META DATA\r\n  urlData = [...uData];\r\n  let taxo = {\r\n    key: \"FAKE_DEPT\",\r\n    taxonomy: \"DEPT\",\r\n    value: slug,\r\n    url: slug,\r\n  };\r\n  urlData.push(taxo);\r\n\r\n  if (!property || property == \"\") property = sortDefault;\r\n  let taxonomyName = \"\";\r\n  let taxonomyValue = \"\";\r\n  let dataBy = \"\";\r\n  let parentDept = \"\";\r\n\r\n  try {\r\n    parentDept = urlData.parentDept;\r\n  } catch (err) {}\r\n\r\n  if (urlData && urlData.length > 0) {\r\n    let currentIncex = urlData.length - 1;\r\n\r\n    taxonomyName = urlData[currentIncex].taxonomy;\r\n    taxonomyValue = urlData[currentIncex].value;\r\n    dataBy = \"search\"; // not this for search and brand\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      setTimeout(() => {\r\n        setAllProducts(products);\r\n        setLoading(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  /*********START SEARCH PRODUCTS USING REGEX*************/\r\n  let fproducts = [];\r\n  fproducts = liveProdsRGXSearch(searchText, products);\r\n\r\n  /*****END SEARCH PRODUCTS USING REGEX*******************/\r\n  temProducts = GetProducts(\r\n    allFilters,\r\n    fproducts,\r\n    property,\r\n    slug,\r\n    taxonomyName,\r\n    taxonomyValue,\r\n    dataBy\r\n  );\r\n\r\n  /*****************************END GETTING PRODUCTS ACCORING TO FILTERS***************************/\r\n  //START STATES HOOK IS HANDLING DATA ACCORING TO AVAIALBILITY FILTERS\r\n  temProducts = avaialbilityFilter(temProducts, checkAvailability);\r\n  //END STATES HOOK IS HANDLING DATA ACCORING TO AVAIALBILITY FILTERS\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  let currentproducts = [];\r\n\r\n  currentproducts = [...temProducts];\r\n\r\n  currentproducts = SortProducts(property, currentproducts);\r\n\r\n  currentproducts = PaginationCalc(\r\n    currentproducts,\r\n    productsPerPage,\r\n    activePage,\r\n    setCurrentPage\r\n  ).currentproducts;\r\n\r\n  let taxanomyFilters = { categories: [], Brand: [] };\r\n  taxanomyFilters[\"categories\"] = urlData;\r\n  taxanomyFilters[\"Brand\"].push(slug);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setAllFilters(taxanomyFilters);\r\n    }, 0);\r\n  }, [uData]);\r\n\r\n  // END DISPLAY META DATA\r\n\r\n  let currentProducts = [];\r\n  currentProducts = currentproducts;\r\n  if (!currentProducts || currentProducts.length < 1) {\r\n    currentProducts = [];\r\n  } else {\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ height: \"400px\" }}>\r\n        <div className={`overlay `}>\r\n          <div className=\"loading \">\r\n            Loading....\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // SET SEO TAGS\r\n  let title = \"\";\r\n  let desc = \"\";\r\n  let keywords = \"\";\r\n  try {\r\n    title = urlTaxonomy.TITLE;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    desc = urlTaxonomy.seo_cat_text;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    keywords = urlTaxonomy.KEYWORDS;\r\n  } catch (err) {}\r\n\r\n  // START DISPLAY CATEGORY PAGE LAYOUT\r\n  let cartValue = [];\r\n\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  if (!title || title == \"\") {\r\n    title = slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  if (!desc || desc == \"\") {\r\n    desc = \"find all about \" + slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  if (!keywords || keywords == \"\") {\r\n    keywords = slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{title}</title>\r\n        <meta name=\"title\" content={title} />\r\n        <meta name=\"description\" content={desc} />\r\n        <meta name=\"keywords\" content={keywords} />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n      </Head>\r\n      ;\r\n      <div className={`overlay ${loading == true ? \"\" : \" d-none\"}`}>\r\n        <div className=\"loading\">\r\n          <div className=\"spinner-grow text-danger\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <div className=\"spinner-grow text-warning\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n      <Layout\r\n        products={products}\r\n        allTaxonomy={taxanomy}\r\n        allFilters={allFilters}\r\n        setAllFilters={setAllFilters}\r\n        currentProducts={temProducts}\r\n        crntProducts={currentproducts}\r\n        urlData={urlData}\r\n        urlTaxonomy={urlTaxonomy}\r\n        activePage={activePage}\r\n        productsPerPage={productsPerPage}\r\n        setCurrentPage={setCurrentPage}\r\n        property={property}\r\n        setProperty={setProperty}\r\n        listGridViews={listGridViews}\r\n        setListGridViews={setListGridViews}\r\n        setPerpageProductscount={setPerpageProductscount}\r\n        checkAvailability={checkAvailability}\r\n        setCheckAvailability={setCheckAvailability}\r\n        searchText={searchText}\r\n        setSearchText={setSearchText}\r\n        sortNewestStatus={sortNewestStatus}\r\n        sortBrandStatus={sortBrandStatus}\r\n        entryTime={entryTime}\r\n        categoryMode={categoryMode}\r\n        landingCategories={landingCategories}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n  // END DISPLAY CATEGORY PAGE LAYOUT\r\n};\r\n\r\n// START SERVER SIDE RENDERING FOR DATA FETCH\r\nexport async function getServerSideProps(context) {\r\n  const { slug } = context.query;\r\n\r\n  let { URL } = process.env;\r\n\r\n  let data = {\r\n    products: [],\r\n    landingCategories: [],\r\n\r\n    settingsData: {},\r\n    categoryMode: \"category\",\r\n  };\r\n  let products = [];\r\n  let landingCategories = [];\r\n\r\n  let settings = {};\r\n\r\n  // Fetch taxanomy from external API\r\n  let res = {};\r\n\r\n  // Fetch data from external API\r\n  try {\r\n    res = await fetch(URL + `/api/brand/${slug}`);\r\n    products = await res.json();\r\n    data.products = products;\r\n  } catch (err) {\r\n    data.products = [];\r\n  }\r\n  data.categoryMode = \"category\";\r\n\r\n  try {\r\n    res = await fetch(URL + `/api/settings/settings`);\r\n    settings = await res.json();\r\n    data.settingsData = settings;\r\n  } catch (err) {\r\n    data.settingsData = {};\r\n  }\r\n\r\n  // Pass data to the page via props\r\n  return { props: { data } };\r\n}\r\n// END SERVER SIDE RENDERING FOR DATA FETCH\r\n\r\nexport default Category;\r\n","D:\\modern\\src\\pages\\browse\\collection\\[slug].js",["721","722"],[],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Head from \"next/head\";\r\nimport Header from \"../../../components/header/Header\";\r\nimport Layout from \"../../../components/category/Layout\";\r\nimport {\r\n  avaialbilityFilter,\r\n  GetProducts,\r\n  GetUrlData,\r\n  GetUrlTaxonomy,\r\n  liveProdsRGXSearch,\r\n  LoadSettings,\r\n  PaginationCalc,\r\n  setInitAvailable,\r\n  SortProducts,\r\n} from \"../../../controllers/category\";\r\nimport Footer from \"../../../components/footer/Footer\";\r\n\r\nconst Category = (props) => {\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"shop\", `/browse/collection/${slug}`);\r\n  }, [slug]);\r\n\r\n  let taxanomy = props.taxonomy;\r\n  const [allProducts, setAllProducts] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [level, setLevel] = useState(0);\r\n  const [property, setProperty] = useState(\"default\");\r\n  const [listGridViews, setListGridViews] = useState(\"\");\r\n  const [checkAvailability, setCheckAvailability] = useState(\"all-items\");\r\n  const [uData, setUData] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const [seoH1Text, setseoH1Text] = useState(\"\");\r\n  const [setLongText, setSeoLongText] = useState(\"\");\r\n\r\n  const [sortDefault, setSortDefault] = useState(\"\");\r\n  const [sortNewestStatus, setSortNewestStatus] = useState(\"\");\r\n  const [sortBrandStatus, setSortBrandStatus] = useState(\"\");\r\n\r\n  const [cProducts, setCProducts] = useState([]);\r\n  const [allFilters, setAllFilters] = useState([]);\r\n\r\n  //HOOK FOR PERPAGE PRODUCTS\r\n  const [perpageProductscount, setPerpageProductscount] = useState(18);\r\n  //HOOK FOR ACTIVE PAGE\r\n  const [activePage, setCurrentPage] = useState(1);\r\n  //PRODUCTS PER PAGE\r\n\r\n  let productsPerPage = perpageProductscount;\r\n\r\n  let urlTaxonomy = useMemo(() => {}, []);\r\n\r\n  let urlData = [];\r\n  let { products, settingsData, categoryMode, landingCategories } = props.data;\r\n  categoryMode = \"category\";\r\n\r\n  let temProducts = [];\r\n  let entryTime = \"Y\";\r\n  // START EXTRACT SETTINGS DATA\r\n\r\n  LoadSettings(\r\n    settingsData,\r\n    setSortBrandStatus,\r\n    setSortNewestStatus,\r\n    setCheckAvailability,\r\n    setSortDefault,\r\n    useEffect\r\n  );\r\n  // END EXTRACT SETTINGS DATA\r\n\r\n  urlTaxonomy = GetUrlTaxonomy(taxanomy, slug);\r\n\r\n  setInitAvailable(checkAvailability, setCheckAvailability);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (urlTaxonomy.typ.toUpperCase() == \"EMPTY\") {\r\n        setLevel(1);\r\n      } else {\r\n        setLevel(2);\r\n      }\r\n    } catch (err) {\r\n      setLevel(0);\r\n    }\r\n  }, [urlTaxonomy]);\r\n\r\n  useEffect(() => {\r\n    GetUrlData(urlTaxonomy, taxanomy).then((data) => {\r\n      setUData(data);\r\n    });\r\n  }, [taxanomy, urlTaxonomy]);\r\n\r\n  // START DISPLAY META DATA\r\n  urlData = [...uData];\r\n  let taxo = {\r\n    key: \"FAKE_DEPT\",\r\n    taxonomy: \"DEPT\",\r\n    value: slug,\r\n    url: slug,\r\n  };\r\n  urlData.push(taxo);\r\n\r\n  if (!property || property == \"\") property = sortDefault;\r\n  let taxonomyName = \"\";\r\n  let taxonomyValue = \"\";\r\n  let dataBy = \"\";\r\n  let parentDept = \"\";\r\n\r\n  try {\r\n    parentDept = urlData.parentDept;\r\n  } catch (err) {}\r\n\r\n  if (urlData && urlData.length > 0) {\r\n    let currentIncex = urlData.length - 1;\r\n\r\n    taxonomyName = urlData[currentIncex].taxonomy;\r\n    taxonomyValue = urlData[currentIncex].value;\r\n    dataBy = \"search\"; // not this for search and brand\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      setTimeout(() => {\r\n        setAllProducts(products);\r\n        setLoading(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  /*********START SEARCH PRODUCTS USING REGEX*************/\r\n  let fproducts = [];\r\n  fproducts = liveProdsRGXSearch(searchText, products);\r\n\r\n  /*****END SEARCH PRODUCTS USING REGEX*******************/\r\n  temProducts = GetProducts(\r\n    allFilters,\r\n    fproducts,\r\n    property,\r\n    slug,\r\n    taxonomyName,\r\n    taxonomyValue,\r\n    dataBy\r\n  );\r\n\r\n  /*****************************END GETTING PRODUCTS ACCORING TO FILTERS***************************/\r\n  //START STATES HOOK IS HANDLING DATA ACCORING TO AVAIALBILITY FILTERS\r\n  temProducts = avaialbilityFilter(temProducts, checkAvailability);\r\n  //END STATES HOOK IS HANDLING DATA ACCORING TO AVAIALBILITY FILTERS\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  let currentproducts = [];\r\n\r\n  currentproducts = [...temProducts];\r\n\r\n  currentproducts = SortProducts(property, currentproducts);\r\n\r\n  currentproducts = PaginationCalc(\r\n    currentproducts,\r\n    productsPerPage,\r\n    activePage,\r\n    setCurrentPage\r\n  ).currentproducts;\r\n\r\n  let taxanomyFilters = { categories: [] };\r\n  taxanomyFilters[\"categories\"] = urlData;\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setAllFilters(taxanomyFilters);\r\n    }, 0);\r\n  }, [uData]);\r\n\r\n  // END DISPLAY META DATA\r\n\r\n  let currentProducts = [];\r\n  currentProducts = currentproducts;\r\n  if (!currentProducts || currentProducts.length < 1) {\r\n    currentProducts = [];\r\n  } else {\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <div style={{ height: \"400px\" }}>\r\n        <div className={`overlay `}>\r\n          <div className=\"loading \">\r\n            Loading....\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // SET SEO TAGS\r\n  let title = \"\";\r\n  let desc = \"\";\r\n  let keywords = \"\";\r\n  try {\r\n    title = urlTaxonomy.TITLE;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    desc = urlTaxonomy.seo_cat_text;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    keywords = urlTaxonomy.KEYWORDS;\r\n  } catch (err) {}\r\n\r\n  // START DISPLAY CATEGORY PAGE LAYOUT\r\n\r\n  let cartValue = [];\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  if (!title || title == \"\") {\r\n    title = slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  if (!desc || desc == \"\") {\r\n    desc = \"find all about \" + slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  if (!keywords || keywords == \"\") {\r\n    keywords = slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{title}</title>\r\n        <meta name=\"title\" content={title} />\r\n        <meta name=\"description\" content={desc} />\r\n        <meta name=\"keywords\" content={keywords} />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n      </Head>\r\n      ;\r\n      <div className={`overlay ${loading == true ? \"\" : \" d-none\"}`}>\r\n        <div className=\"loading\">\r\n          <div className=\"spinner-grow text-danger\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <div className=\"spinner-grow text-warning\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n      <Layout\r\n        products={products}\r\n        allTaxonomy={taxanomy}\r\n        allFilters={allFilters}\r\n        setAllFilters={setAllFilters}\r\n        currentProducts={temProducts}\r\n        crntProducts={currentproducts}\r\n        urlData={urlData}\r\n        urlTaxonomy={urlTaxonomy}\r\n        activePage={activePage}\r\n        productsPerPage={productsPerPage}\r\n        setCurrentPage={setCurrentPage}\r\n        property={property}\r\n        setProperty={setProperty}\r\n        listGridViews={listGridViews}\r\n        setListGridViews={setListGridViews}\r\n        setPerpageProductscount={setPerpageProductscount}\r\n        checkAvailability={checkAvailability}\r\n        setCheckAvailability={setCheckAvailability}\r\n        searchText={searchText}\r\n        setSearchText={setSearchText}\r\n        sortNewestStatus={sortNewestStatus}\r\n        sortBrandStatus={sortBrandStatus}\r\n        entryTime={entryTime}\r\n        categoryMode={categoryMode}\r\n        landingCategories={landingCategories}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n  // END DISPLAY CATEGORY PAGE LAYOUT\r\n};\r\n\r\n// START SERVER SIDE RENDERING FOR DATA FETCH\r\nexport async function getServerSideProps(context) {\r\n  const { slug } = context.query;\r\n\r\n  let { URL } = process.env;\r\n\r\n  let data = {\r\n    taxanomy: [],\r\n    products: [],\r\n    landingCategories: [],\r\n\r\n    settingsData: {},\r\n    categoryMode: \"category\",\r\n  };\r\n  let taxanomy = [];\r\n  let products = [];\r\n  let landingCategories = [];\r\n\r\n  let settings = {};\r\n\r\n  // Fetch taxanomy from external API\r\n  let res = {};\r\n\r\n  // Fetch data from external API\r\n  try {\r\n    res = await fetch(URL + `/api/search/${slug}`);\r\n    products = await res.json();\r\n    data.products = products;\r\n    data.categoryMode = \"category\";\r\n  } catch (err) {\r\n    data.products = [];\r\n  }\r\n  data.categoryMode = \"category\";\r\n\r\n  try {\r\n    res = await fetch(URL + `/api/settings/settings`);\r\n    settings = await res.json();\r\n    data.settingsData = settings;\r\n  } catch (err) {\r\n    data.settingsData = {};\r\n  }\r\n\r\n  // Pass data to the page via props\r\n  return { props: { data } };\r\n}\r\n// END SERVER SIDE RENDERING FOR DATA FETCH\r\n\r\nexport default Category;\r\n","D:\\modern\\src\\pages\\browse\\search\\[slug].js",["723","724"],[],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Head from \"next/head\";\r\nimport Layout from \"../../../components/category/Layout\";\r\nimport {\r\n  avaialbilityFilter,\r\n  GetProducts,\r\n  GetUrlData,\r\n  GetUrlTaxonomy,\r\n  liveProdsRGXSearch,\r\n  LoadSettings,\r\n  PaginationCalc,\r\n  setInitAvailable,\r\n  SortProducts,\r\n} from \"../../../controllers/category\";\r\nimport Header from \"../../../components/header/Header\";\r\nimport Footer from \"../../../components/footer/Footer\";\r\n\r\nconst Category = (props) => {\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n\r\n  let taxanomy = props.taxonomy;\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"shop\", `/browse/search/${slug}`);\r\n  }, [slug]);\r\n\r\n  const [allProducts, setAllProducts] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [level, setLevel] = useState(0);\r\n  const [property, setProperty] = useState(\"default\");\r\n  const [listGridViews, setListGridViews] = useState(\"\");\r\n  const [checkAvailability, setCheckAvailability] = useState(\"all-items\");\r\n  const [uData, setUData] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const [seoH1Text, setseoH1Text] = useState(\"\");\r\n  const [setLongText, setSeoLongText] = useState(\"\");\r\n\r\n  const [sortDefault, setSortDefault] = useState(\"\");\r\n  const [sortNewestStatus, setSortNewestStatus] = useState(\"\");\r\n  const [sortBrandStatus, setSortBrandStatus] = useState(\"\");\r\n\r\n  const [cProducts, setCProducts] = useState([]);\r\n  const [allFilters, setAllFilters] = useState([]);\r\n\r\n  //HOOK FOR PERPAGE PRODUCTS\r\n  const [perpageProductscount, setPerpageProductscount] = useState(18);\r\n  //HOOK FOR ACTIVE PAGE\r\n  const [activePage, setCurrentPage] = useState(1);\r\n  //PRODUCTS PER PAGE\r\n\r\n  let productsPerPage = perpageProductscount;\r\n\r\n  let urlTaxonomy = useMemo(() => {}, []);\r\n\r\n  let urlData = [];\r\n  let { products, settingsData, categoryMode, landingCategories } = props.data;\r\n\r\n  categoryMode = \"category\";\r\n\r\n  let temProducts = [];\r\n  let entryTime = \"Y\";\r\n  let isSearch = \"yes\";\r\n  // START EXTRACT SETTINGS DATA\r\n\r\n  LoadSettings(\r\n    settingsData,\r\n    setSortBrandStatus,\r\n    setSortNewestStatus,\r\n    setCheckAvailability,\r\n    setSortDefault,\r\n    useEffect\r\n  );\r\n  // END EXTRACT SETTINGS DATA\r\n\r\n  urlTaxonomy = GetUrlTaxonomy(taxanomy, slug);\r\n\r\n  setInitAvailable(checkAvailability, setCheckAvailability);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (urlTaxonomy.typ.toUpperCase() == \"EMPTY\") {\r\n        setLevel(1);\r\n      } else {\r\n        setLevel(2);\r\n      }\r\n    } catch (err) {\r\n      setLevel(0);\r\n    }\r\n  }, [urlTaxonomy]);\r\n\r\n  useEffect(() => {\r\n    GetUrlData(urlTaxonomy, taxanomy).then((data) => {\r\n      setUData(data);\r\n    });\r\n  }, [taxanomy, urlTaxonomy]);\r\n\r\n  // START DISPLAY META DATA\r\n  urlData = [...uData];\r\n  let taxo = {\r\n    key: \"FAKE_DEPT\",\r\n    taxonomy: \"DEPT\",\r\n    value: slug,\r\n    url: slug,\r\n  };\r\n  urlData.push(taxo);\r\n\r\n  if (!property || property == \"\") property = sortDefault;\r\n  let taxonomyName = \"\";\r\n  let taxonomyValue = \"\";\r\n  let dataBy = \"\";\r\n  let parentDept = \"\";\r\n\r\n  try {\r\n    parentDept = urlData.parentDept;\r\n  } catch (err) {}\r\n\r\n  if (urlData && urlData.length > 0) {\r\n    let currentIncex = urlData.length - 1;\r\n\r\n    taxonomyName = urlData[currentIncex].taxonomy;\r\n    taxonomyValue = urlData[currentIncex].value;\r\n    dataBy = \"search\"; // not this for search and brand\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      setTimeout(() => {\r\n        setAllProducts(products);\r\n        setLoading(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  /*********START SEARCH PRODUCTS USING REGEX*************/\r\n  let fproducts = [];\r\n  fproducts = liveProdsRGXSearch(searchText, products);\r\n\r\n  /*****END SEARCH PRODUCTS USING REGEX*******************/\r\n  temProducts = GetProducts(\r\n    allFilters,\r\n    fproducts,\r\n    property,\r\n    slug,\r\n    taxonomyName,\r\n    taxonomyValue,\r\n    dataBy\r\n  );\r\n\r\n  /*****************************END GETTING PRODUCTS ACCORING TO FILTERS***************************/\r\n  //START STATES HOOK IS HANDLING DATA ACCORING TO AVAIALBILITY FILTERS\r\n  temProducts = avaialbilityFilter(temProducts, checkAvailability);\r\n  //END STATES HOOK IS HANDLING DATA ACCORING TO AVAIALBILITY FILTERS\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  let currentproducts = [];\r\n\r\n  currentproducts = [...temProducts];\r\n\r\n  currentproducts = SortProducts(property, currentproducts);\r\n\r\n  currentproducts = PaginationCalc(\r\n    currentproducts,\r\n    productsPerPage,\r\n    activePage,\r\n    setCurrentPage\r\n  ).currentproducts;\r\n\r\n  let taxanomyFilters = { categories: [] };\r\n  taxanomyFilters[\"categories\"] = urlData;\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setAllFilters(taxanomyFilters);\r\n    }, 0);\r\n  }, [uData]);\r\n\r\n  // END DISPLAY META DATA\r\n\r\n  let currentProducts = [];\r\n  currentProducts = currentproducts;\r\n  if (!currentProducts || currentProducts.length < 1) {\r\n    currentProducts = [];\r\n  } else {\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <div style={{ height: \"400px\" }}>\r\n        <div className={`overlay `}>\r\n          <div className=\"loading \">\r\n            Loading....\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // SET SEO TAGS\r\n  let title = \"\";\r\n  let desc = \"\";\r\n  let keywords = \"\";\r\n  try {\r\n    title = urlTaxonomy.TITLE;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    desc = urlTaxonomy.seo_cat_text;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    keywords = urlTaxonomy.KEYWORDS;\r\n  } catch (err) {}\r\n  let cartValue = [];\r\n\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  if (!title || title == \"\") {\r\n    title = slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  if (!desc || desc == \"\") {\r\n    desc = \"find all about \" + slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  if (!keywords || keywords == \"\") {\r\n    keywords = slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  // START DISPLAY CATEGORY PAGE LAYOUT\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{title}</title>\r\n        <meta name=\"title\" content={title} />\r\n        <meta name=\"description\" content={desc} />\r\n        <meta name=\"keywords\" content={keywords} />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n      </Head>\r\n      <div className={`overlay ${loading == true ? \"\" : \" d-none\"}`}>\r\n        <div className=\"loading\">\r\n          <div className=\"spinner-grow text-danger\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <div className=\"spinner-grow text-warning\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <div className=\"spinner-grow text-info\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n      <Layout\r\n        products={products}\r\n        allTaxonomy={taxanomy}\r\n        allFilters={allFilters}\r\n        setAllFilters={setAllFilters}\r\n        currentProducts={temProducts}\r\n        crntProducts={currentproducts}\r\n        urlData={urlData}\r\n        urlTaxonomy={urlTaxonomy}\r\n        activePage={activePage}\r\n        productsPerPage={productsPerPage}\r\n        setCurrentPage={setCurrentPage}\r\n        property={property}\r\n        setProperty={setProperty}\r\n        listGridViews={listGridViews}\r\n        setListGridViews={setListGridViews}\r\n        setPerpageProductscount={setPerpageProductscount}\r\n        checkAvailability={checkAvailability}\r\n        setCheckAvailability={setCheckAvailability}\r\n        searchText={searchText}\r\n        setSearchText={setSearchText}\r\n        sortNewestStatus={sortNewestStatus}\r\n        sortBrandStatus={sortBrandStatus}\r\n        entryTime={entryTime}\r\n        categoryMode={categoryMode}\r\n        landingCategories={landingCategories}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n  // END DISPLAY CATEGORY PAGE LAYOUT\r\n};\r\n\r\n// START SERVER SIDE RENDERING FOR DATA FETCH\r\nexport async function getServerSideProps(context) {\r\n  const { slug } = context.query;\r\n\r\n  let { URL } = process.env;\r\n\r\n  let data = {\r\n    products: [],\r\n    landingCategories: [],\r\n\r\n    settingsData: {},\r\n    categoryMode: \"category\",\r\n  };\r\n  let products = [];\r\n  let landingCategories = [];\r\n\r\n  let settings = {};\r\n\r\n  // Fetch taxanomy from external API\r\n  let res = {};\r\n\r\n  // Fetch data from external API\r\n  try {\r\n    res = await fetch(URL + `/api/search/${slug}`);\r\n    products = await res.json();\r\n    data.products = products;\r\n    data.categoryMode = \"category\";\r\n  } catch (err) {\r\n    data.products = [];\r\n  }\r\n  data.categoryMode = \"category\";\r\n\r\n  try {\r\n    res = await fetch(URL + `/api/settings/settings`);\r\n    settings = await res.json();\r\n    data.settingsData = settings;\r\n  } catch (err) {\r\n    data.settingsData = {};\r\n  }\r\n\r\n  // Pass data to the page via props\r\n  return { props: { data } };\r\n}\r\n// END SERVER SIDE RENDERING FOR DATA FETCH\r\n\r\nexport default Category;\r\n","D:\\modern\\src\\pages\\cart.js",["725"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Head from \"next/head\";\r\nimport EmptyCart from \"../components/cart/EmptyCart\";\r\nimport Layout from \"../components/cart/Layout\";\r\nimport Header from \"../components/header/Header\";\r\nimport Footer from \"../components/footer/Footer\";\r\n\r\nconst Cart = (props) => {\r\n  let { URL } = process.env;\r\n\r\n  const [cart, setCart] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  let cartValue = [];\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  let cartData = [];\r\n\r\n  if (typeof window != \"undefined\") {\r\n    try {\r\n      cartData = JSON.parse(localStorage.getItem(\"cart\"));\r\n    } catch (err) {}\r\n  }\r\n  let checkCart = \"\";\r\n  try {\r\n    checkCart = JSON.stringify(cartData);\r\n  } catch (err) {}\r\n\r\n  useEffect(() => {\r\n    setCart(cartData);\r\n    setLoading(false);\r\n  }, [checkCart]);\r\n\r\n  if (typeof window != \"undefined\") {\r\n    try {\r\n    } catch (err) {}\r\n  }\r\n\r\n  let sum = 0;\r\n  try {\r\n    sum = cartData.reduce((prod, { total }) => prod + total, 0);\r\n  } catch (err) {}\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ height: \"400px\" }}>\r\n        <div className={`overlay `}>\r\n          <div className=\"loading \">\r\n            Loading....\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!cart || cart.length < 1) {\r\n    return (\r\n      <>\r\n        <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n\r\n        <EmptyCart cart={cart} page=\"cart\" />\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>View Cart | Optimized and SEO Friendly Demo Site</title>\r\n        <meta\r\n          name=\"title\"\r\n          content=\"View Cart | Optimized and SEO Friendly Demo Site\"\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"View cart of Optimized and SEO Friendly Ecommerce site that will boost your sales and conversions\"\r\n        />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"ecommerce, modern, SEO friendly, cumulus\"\r\n        />\r\n      </Head>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n      <Layout cart={cart} setCart={setCart} />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default Cart;\r\n","D:\\modern\\src\\pages\\category\\[slug].js",["726","727"],[],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Head from \"next/head\";\r\nimport Layout from \"../../components/category/Layout\";\r\nimport {\r\n  avaialbilityFilter,\r\n  GetProducts,\r\n  GetUrlData,\r\n  GetUrlTaxonomy,\r\n  liveProdsRGXSearch,\r\n  LoadSettings,\r\n  PaginationCalc,\r\n  setInitAvailable,\r\n  SortProducts,\r\n} from \"../../controllers/category\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\n\r\nconst Category = (props) => {\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n\r\n  let taxanomy = props.taxonomy;\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [level, setLevel] = useState(0);\r\n  const [property, setProperty] = useState(\"default\");\r\n  const [listGridViews, setListGridViews] = useState(\"\");\r\n  const [checkAvailability, setCheckAvailability] = useState(\"all-items\");\r\n  const [uData, setUData] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const [seoH1Text, setseoH1Text] = useState(\"\");\r\n  const [setLongText, setSeoLongText] = useState(\"\");\r\n\r\n  const [sortDefault, setSortDefault] = useState(\"\");\r\n  const [sortNewestStatus, setSortNewestStatus] = useState(\"\");\r\n  const [sortBrandStatus, setSortBrandStatus] = useState(\"\");\r\n  const [allFilters, setAllFilters] = useState([]);\r\n\r\n  //HOOK FOR PERPAGE PRODUCTS\r\n  const [perpageProductscount, setPerpageProductscount] = useState(18);\r\n  //HOOK FOR ACTIVE PAGE\r\n  const [activePage, setCurrentPage] = useState(1);\r\n  //PRODUCTS PER PAGE\r\n  let productsPerPage = perpageProductscount;\r\n\r\n  let urlTaxonomy = useMemo(() => {}, []);\r\n\r\n  let urlData = [];\r\n  let { products, settingsData, categoryMode, landingCategories } = props.data;\r\n\r\n  let temProducts = [];\r\n  let entryTime = \"Y\";\r\n\r\n  // START EXTRACT SETTINGS DATA\r\n\r\n  LoadSettings(\r\n    settingsData,\r\n    setSortBrandStatus,\r\n    setSortNewestStatus,\r\n    setCheckAvailability,\r\n    setSortDefault,\r\n    useEffect\r\n  );\r\n  // END EXTRACT SETTINGS DATA\r\n\r\n  urlTaxonomy = GetUrlTaxonomy(taxanomy, slug);\r\n\r\n  setInitAvailable(checkAvailability, setCheckAvailability);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (urlTaxonomy.typ.toUpperCase() == \"EMPTY\") {\r\n        setLevel(1);\r\n      } else {\r\n        setLevel(2);\r\n      }\r\n    } catch (err) {\r\n      setLevel(0);\r\n    }\r\n  }, [urlTaxonomy]);\r\n\r\n  useEffect(() => {\r\n    GetUrlData(urlTaxonomy, taxanomy).then((data) => {\r\n      setUData(data);\r\n    });\r\n  }, [taxanomy, urlTaxonomy]);\r\n\r\n  // START DISPLAY META DATA\r\n  urlData = [...uData];\r\n\r\n  if (!property || property == \"\") property = sortDefault;\r\n  let taxonomyName = \"\";\r\n  let taxonomyValue = \"\";\r\n  let dataBy = \"\";\r\n  let parentDept = \"\";\r\n\r\n  try {\r\n    parentDept = urlData.parentDept;\r\n  } catch (err) {}\r\n\r\n  if (urlData && urlData.length > 0) {\r\n    let currentIncex = urlData.length - 1;\r\n\r\n    taxonomyName = urlData[currentIncex].taxonomy;\r\n    taxonomyValue = urlData[currentIncex].value;\r\n    dataBy = \"taxanomy\"; // not this for search and brand\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      setTimeout(() => {\r\n        setAllProducts(products);\r\n        setLoading(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  /*********START SEARCH PRODUCTS USING REGEX*************/\r\n  let fproducts = [];\r\n  fproducts = liveProdsRGXSearch(searchText, allProducts);\r\n\r\n  /*****END SEARCH PRODUCTS USING REGEX*******************/\r\n\r\n  temProducts = GetProducts(\r\n    allFilters,\r\n    fproducts,\r\n    property,\r\n    slug,\r\n    taxonomyName,\r\n    taxonomyValue,\r\n    dataBy\r\n  );\r\n\r\n  /*****************************END GETTING PRODUCTS ACCORING TO FILTERS***************************/\r\n  //START STATES HOOK IS HANDLING DATA ACCORING TO AVAIALBILITY FILTERS\r\n  temProducts = avaialbilityFilter(temProducts, checkAvailability);\r\n  //END STATES HOOK IS HANDLING DATA ACCORING TO AVAIALBILITY FILTERS\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 100);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  }, [slug]);\r\n\r\n  let currentproducts = [];\r\n\r\n  currentproducts = [...temProducts];\r\n\r\n  currentproducts = SortProducts(property, currentproducts);\r\n\r\n  currentproducts = PaginationCalc(\r\n    currentproducts,\r\n    productsPerPage,\r\n    activePage,\r\n    setCurrentPage\r\n  ).currentproducts;\r\n\r\n  let taxanomyFilters = { categories: [] };\r\n  taxanomyFilters[\"categories\"] = urlData;\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setAllFilters(taxanomyFilters);\r\n    }, 0);\r\n  }, [uData]);\r\n\r\n  // END DISPLAY META DATA\r\n\r\n  let currentProducts = [];\r\n  currentProducts = currentproducts;\r\n  if (!currentProducts || currentProducts.length < 1) {\r\n    currentProducts = [];\r\n  } else {\r\n  }\r\n\r\n  // SET SEO TAGS\r\n  let title = \"\";\r\n  let desc = \"\";\r\n  let keywords = \"\";\r\n  try {\r\n    title = urlTaxonomy.TITLE;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    desc = urlTaxonomy.seo_cat_text;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    keywords = urlTaxonomy.KEYWORDS;\r\n  } catch (err) {}\r\n\r\n  if (!title || title == \"\") {\r\n    title = slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  if (!desc || desc == \"\") {\r\n    desc = \"find all about \" + slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  if (!keywords || keywords == \"\") {\r\n    keywords = slug.replace(/-/g, \" \");\r\n  }\r\n\r\n  // START DISPLAY CATEGORY PAGE LAYOUT\r\n\r\n  let cartValue = [];\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Head>\r\n          <title>{title}</title>\r\n          <meta name=\"title\" content={title} />\r\n          <meta name=\"description\" content={desc} />\r\n          <meta name=\"keywords\" content={keywords} />\r\n          <meta name=\"robots\" content=\"index, follow\" />\r\n        </Head>\r\n\r\n        <div style={{ height: \"400px\" }}>\r\n          <div className=\"d-none\">\r\n            <h1>{title}</h1>\r\n            <h2>Shop {title}</h2>\r\n            <h3>Please wait data is being loaed in a moment</h3>\r\n            <p>\r\n              Find a wide variety of guns online from innovative and reliable\r\n              brands designed with accuracy in mind. Choose from Centerfire\r\n              Rifles and Rimfire Rifles for target shooting and hunting from a\r\n              tree stand. For open and concealed carry, shop Centerfire Pistols\r\n              and Rimfire Pistols. When you are ready to shoot clay pigeons and\r\n              targets, choose from our selection of Shotguns.\r\n            </p>\r\n          </div>\r\n          <div className={`overlay `}>\r\n            <div className=\"loading \">\r\n              Loading....\r\n              <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n              <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n              <div className=\"spinner-grow text-info\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{title}</title>\r\n        <meta name=\"title\" content={title} />\r\n        <meta name=\"description\" content={desc} />\r\n        <meta name=\"keywords\" content={keywords} />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n      </Head>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />;\r\n      <Layout\r\n        products={products}\r\n        allTaxonomy={taxanomy}\r\n        allFilters={allFilters}\r\n        setAllFilters={setAllFilters}\r\n        currentProducts={temProducts}\r\n        crntProducts={currentproducts}\r\n        urlData={urlData}\r\n        urlTaxonomy={urlTaxonomy}\r\n        activePage={activePage}\r\n        productsPerPage={productsPerPage}\r\n        setCurrentPage={setCurrentPage}\r\n        property={property}\r\n        setProperty={setProperty}\r\n        listGridViews={listGridViews}\r\n        setListGridViews={setListGridViews}\r\n        setPerpageProductscount={setPerpageProductscount}\r\n        checkAvailability={checkAvailability}\r\n        setCheckAvailability={setCheckAvailability}\r\n        searchText={searchText}\r\n        setSearchText={setSearchText}\r\n        sortNewestStatus={sortNewestStatus}\r\n        sortBrandStatus={sortBrandStatus}\r\n        entryTime={entryTime}\r\n        categoryMode={categoryMode}\r\n        landingCategories={landingCategories}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n  // END DISPLAY CATEGORY PAGE LAYOUT\r\n};\r\n\r\n// START SERVER SIDE RENDERING FOR DATA FETCH\r\nexport async function getServerSideProps({ query, res }) {\r\n  try {\r\n    res.setHeader(\r\n      \"Cache-Control\",\r\n      \"public, s-maxage=43200, stale-while-revalidate=60\"\r\n    );\r\n  } catch (err) {}\r\n\r\n  const { slug } = query;\r\n\r\n  let { URL } = process.env;\r\n\r\n  let data = {\r\n    taxanomy: [],\r\n    products: [],\r\n    landingCategories: [],\r\n\r\n    settingsData: {},\r\n    categoryMode: \"category\",\r\n  };\r\n  let taxanomy = [];\r\n  let products = [];\r\n  let landingCategories = [];\r\n\r\n  let settings = {};\r\n\r\n  // Fetch taxanomy from external API\r\n  let resp = {};\r\n\r\n  // Fetch data from external API\r\n  try {\r\n    resp = await fetch(URL + `/api/category/${slug}`);\r\n    products = await resp.json();\r\n    data.products = products;\r\n    data.categoryMode = \"category\";\r\n  } catch (err) {\r\n    data.categoryMode = \"landing\";\r\n    data.products = [];\r\n  }\r\n\r\n  try {\r\n    resp = await fetch(URL + `/api/settings/settings`);\r\n    settings = await resp.json();\r\n    data.settingsData = settings;\r\n  } catch (err) {\r\n    data.settingsData = {};\r\n  }\r\n\r\n  if (data.categoryMode == \"landing\") {\r\n    try {\r\n      resp = await fetch(URL + `/api/landing/categories`);\r\n      landingCategories = await resp.json();\r\n      data.landingCategories = landingCategories;\r\n    } catch (err) {\r\n      data.landingCategories = [];\r\n    }\r\n  }\r\n  // Pass data to the page via props\r\n  return { props: { data } };\r\n}\r\n// END SERVER SIDE RENDERING FOR DATA FETCH\r\n\r\nexport default Category;\r\n","D:\\modern\\src\\pages\\checkout.js",["728","729","730"],[],"import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\nimport Layout from \"../components/checkout/Layout\";\r\nimport { getCheckoutScripts } from \"../assets/js/main\";\r\nimport { getCurrentUserData } from \"../controllers/account\";\r\nimport Head from \"next/head\";\r\nimport Router from \"next/router\";\r\nimport EmptyCart from \"../components/cart/EmptyCart\";\r\nimport {\r\n  getOrderDetails,\r\n  initOrderDetails,\r\n  setOrderDetails,\r\n} from \"../controllers/order\";\r\nimport Header from \"../components/header/Header\";\r\nimport Footer from \"../components/footer/Footer\";\r\n\r\nconst Checkout = (props) => {\r\n  let { URL } = process.env;\r\n  const [cart, setCart] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n  const [grandTotal, setGrandTotal] = useState(\"0.00\");\r\n  const [paymentMethod, setPaymentMethod] = useState(\"paypal\");\r\n\r\n  const [shippingMethod, setShippingMethod] = useState({\r\n    name: \"Nick Shipping ($0.00)\",\r\n    amount: 0,\r\n  });\r\n  const [tax, setTax] = useState(0.0);\r\n  const [screen, setScreen] = useState(\"\");\r\n  const [userData, setUserData] = useState([]);\r\n  let loginstatus = \"\";\r\n  let userID = 0;\r\n  if (typeof window != \"undefined\") {\r\n    loginstatus = localStorage.getItem(\"isLogin\");\r\n    userID = localStorage.getItem(\"currentAliveUser\");\r\n  }\r\n  useEffect(async () => {\r\n    let user = await getCurrentUserData(\"\");\r\n    setUserData(user);\r\n  }, []);\r\n\r\n  let cartData = [];\r\n\r\n  let checkCart = \"\";\r\n  try {\r\n    checkCart = JSON.stringify(cartData);\r\n  } catch (err) {}\r\n\r\n  useEffect(() => {\r\n    cartData = JSON.parse(localStorage.getItem(\"cart\"));\r\n    setLoading(false);\r\n  }, [checkCart]);\r\n\r\n  useEffect(() => {\r\n    setCart(cartData);\r\n  }, [checkCart]);\r\n\r\n  // START LOAD JQUERY JAVASCRIPT ADDITIONAL CODE\r\n  if (typeof window != \"undefined\") {\r\n    getCheckoutScripts($);\r\n  }\r\n\r\n  let cartValue = [];\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  // END LOAD JQUERY JAVASCRIPT ADDITIONAL CODE\r\n  if (loading == false && cart && cart.length < 1) {\r\n    return (\r\n      <>\r\n        <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n        <EmptyCart page=\"checkout\" />{\" \"}\r\n      </>\r\n    );\r\n  }\r\n\r\n  let orderDetails = initOrderDetails();\r\n  orderDetails.items = cart;\r\n  orderDetails.UserID = userData.id;\r\n  orderDetails.user = userData;\r\n\r\n  orderDetails.payment.paymentMethod = paymentMethod;\r\n  orderDetails.payment.currency = currency;\r\n\r\n  orderDetails.order.shipping.name = shippingMethod.name;\r\n  orderDetails.order.shipping.amount = shippingMethod.amount;\r\n\r\n  setOrderDetails(\"orderDetails\", orderDetails);\r\n\r\n  let od = getOrderDetails(\"orderDetails\");\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>CheckOut Page | Optimized and SEO Friendly Demo Site</title>\r\n        <meta\r\n          name=\"title\"\r\n          content=\"CheckOut Page | Optimized and SEO Friendly Demo Site\"\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Checkout Page of Optimized and SEO Friendly Ecommerce site that will boost your sales and conversions\"\r\n        />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"ecommerce, modern, SEO friendly, cumulus\"\r\n        />\r\n      </Head>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n      <Layout\r\n        userData={userData}\r\n        setUserData={setUserData}\r\n        cart={cart}\r\n        setCart={setCart}\r\n        shippingMethod={shippingMethod}\r\n        setShippingMethod={setShippingMethod}\r\n        tax={tax}\r\n        setTax={setTax}\r\n        screen={screen}\r\n        setScreen={setScreen}\r\n        currency={currency}\r\n        setCurrency={setCurrency}\r\n        grandTotal={grandTotal}\r\n        setGrandTotal={setGrandTotal}\r\n        paymentMethod={paymentMethod}\r\n        setPaymentMethod={setPaymentMethod}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\modern\\src\\pages\\index.js",[],[],"D:\\modern\\src\\pages\\info\\[page].js",[],[],"D:\\modern\\src\\pages\\login.js",["731"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"../components/footer/Footer\";\r\nimport Header from \"../components/header/Header\";\r\nimport Layout from \"../components/login/Layout\";\r\n\r\nconst Login = (props) => {\r\n  const [isLogin, setIsLogin] = useState(\"no\");\r\n  const [screen, setScreen] = useState(\"login\");\r\n\r\n  let loginstatus = \"\";\r\n\r\n  if (typeof window != \"undefined\") {\r\n    try {\r\n      loginstatus = localStorage.getItem(\"isLogin\");\r\n    } catch (err) {}\r\n  }\r\n  useEffect(() => {\r\n    setIsLogin(loginstatus);\r\n  }, []);\r\n  let cartValue = [];\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n      <Layout\r\n        screen={screen}\r\n        setScreen={setScreen}\r\n        isLogin={isLogin}\r\n        setIsLogin={setIsLogin}\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\modern\\src\\pages\\order.js",[],[],"D:\\modern\\src\\pages\\subscribe.js",[],[],"D:\\modern\\src\\pages\\test.js",[],[],"D:\\modern\\src\\pages\\test2.js",[],[],"D:\\modern\\src\\pages\\_app.js",["732","733","734","735","736"],[],"D:\\modern\\src\\components\\account\\BillingAddress.js",[],[],"D:\\modern\\src\\components\\account\\BillingAddressTab.js",[],[],"D:\\modern\\src\\components\\account\\Breadcrumbs.js",[],[],"D:\\modern\\src\\components\\account\\DisplayListItems.js",["737","738","739","740","741"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n\r\nimport {\r\n  UpdateWishListQTY,\r\n  deleteWishListItem,\r\n} from \"../../controllers/wishlist\";\r\nimport { AddToCart } from \"../../controllers/cart\";\r\n\r\nconst DisplayListItems = (props) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  let cartData = [];\r\n  if (typeof window != \"undefined\") {\r\n    cartData = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n\r\n  let listItems = [];\r\n  let { URL } = process.env;\r\n  if (props.wishListItems && props.wishListItems.length > 0) {\r\n    listItems = props.wishListItems[0].items;\r\n  } else {\r\n    listItems = [];\r\n  }\r\n  useEffect(() => {\r\n    setCart(cartData);\r\n  }, [listItems]);\r\n  return (\r\n    <section id=\"wishlistContent\">\r\n      {listItems && listItems.length > 0 ? (\r\n        listItems.map((product) => {\r\n          if (product.itemPrice) {\r\n            let iTotal = 0;\r\n\r\n            if (!product.itemPrice) {\r\n              product.itemPrice = product.price;\r\n            }\r\n            try {\r\n              iTotal = product.itemPrice * product.qty;\r\n            } catch (err) {\r\n              iTotal = product.price * product.qty;\r\n            }\r\n            return (\r\n              <div className=\"row  \" key={product.name}>\r\n                <div className=\"row main align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <Link href={product.product_url}>\r\n                      <a>\r\n                        <img className=\"img-fluid\" src={product.image} />\r\n                      </a>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <Link href={product.product_url}>\r\n                      <a>\r\n                        <div className=\"row text-muted\">{product.brand}</div>\r\n                        <div className=\"row\">{product.name}</div>\r\n                      </a>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-2 qtyInner\">\r\n                    <button\r\n                      className=\"minus\"\r\n                      onClick={(e) => {\r\n                        UpdateWishListQTY(\r\n                          e,\r\n                          \"decrement\",\r\n                          product.id,\r\n                          props.setUserLists,\r\n                          props.userLists,\r\n                          props.userID,\r\n                          props.listName\r\n                        );\r\n                      }}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"addminus\"\r\n                      defaultValue={product.qty}\r\n                      min=\"1\"\r\n                      id={\"qtyBox\" + product.id}\r\n                      name=\"qty\"\r\n                      onChange={(e) => {\r\n                        UpdateWishListQTY(\r\n                          e,\r\n                          \"none\",\r\n                          product.id,\r\n                          props.setUserLists,\r\n                          props.userLists,\r\n                          props.userID,\r\n                          props.listName\r\n                        );\r\n                      }}\r\n                    />\r\n                    <button\r\n                      className=\"plus\"\r\n                      onClick={(e) => {\r\n                        UpdateWishListQTY(\r\n                          e,\r\n                          \"increment\",\r\n                          product.id,\r\n                          props.setUserLists,\r\n                          props.userLists,\r\n                          props.userID,\r\n                          props.listName\r\n                        );\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-2\">${iTotal.toFixed(2)} </div>\r\n\r\n                  <div className=\"col-2\">\r\n                    <button\r\n                      className=\"bg-transparent border-0 align-right\"\r\n                      onClick={(e) => {\r\n                        deleteWishListItem(\r\n                          e,\r\n                          product.id,\r\n                          props.setUserLists,\r\n                          props.userLists,\r\n                          props.userID,\r\n                          props.listName,\r\n                          props.setWishListChanged,\r\n                          props.setListName\r\n                        );\r\n                      }}\r\n                    >\r\n                      <img className=\"mr-2\" src={URL + \"/images/trash-2.svg\"} />\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"col-2\" style={{ textAlign: \"right\" }}>\r\n                    <button\r\n                      className=\"btn btn-dark align-right\"\r\n                      onClick={(e) => {\r\n                        AddToCart(e, product, cart, setCart);\r\n\r\n                        setTimeout(() => {\r\n                          deleteWishListItem(\r\n                            e,\r\n                            product.id,\r\n                            props.setUserLists,\r\n                            props.userLists,\r\n                            props.userID,\r\n                            props.listName,\r\n                            props.setWishListChanged,\r\n                            props.setListName\r\n                          );\r\n                        }, 1000);\r\n                      }}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })\r\n      ) : (\r\n        <>\r\n          <p>\r\n            No Items are currently in the list <strong>{props.listName}</strong>\r\n          </p>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DisplayListItems;\r\n","D:\\modern\\src\\components\\account\\DisplayLists.js",["742","743"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { deleteWishLists } from \"../../controllers/wishlist\";\r\nimport DisplayListitems from \"../account/DisplayListItems\";\r\n\r\nconst DisplayLists = (props) => {\r\n  let userID = 0;\r\n  if (typeof window != \"undefined\") {\r\n    userID = localStorage.getItem(\"currentAliveUser\");\r\n  }\r\n  let { URL } = process.env;\r\n\r\n  let lists = [];\r\n  lists = props.userLists;\r\n\r\n  return (\r\n    <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n      {lists && lists.length > 0\r\n        ? lists.map((list, index) => {\r\n            let row = index + 1;\r\n            return (\r\n              <div className=\"accordion-item\" key={list.name}>\r\n                <h2 className=\"accordion-header\" id={\"flush-heading\" + index}>\r\n                  <span>\r\n                    <em>{index + 1}</em>\r\n                  </span>\r\n                  <span>\r\n                    Name<em>{list.name}</em>\r\n                  </span>\r\n                  <button\r\n                    className=\"accordion-button collapsed\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target={\"#flush-collapse\" + index}\r\n                    aria-expanded=\"false\"\r\n                    aria-controls={\"flush-collapse\" + index}\r\n                    onClick={() => {\r\n                      props.setListName(list.name);\r\n                    }}\r\n                  ></button>\r\n                  <button\r\n                    onClick={() => {\r\n                      deleteWishLists(userID, list.name, props.setUserLists);\r\n                    }}\r\n                  >\r\n                    <img className=\"m-0\" src={URL + \"/images/trash-2.svg\"} />\r\n                  </button>\r\n                </h2>\r\n                <div\r\n                  id={\"flush-collapse\" + index}\r\n                  className=\"accordion-collapse collapse\"\r\n                  aria-labelledby={\"flush-heading\" + index}\r\n                  data-bs-parent=\"#accordionFlushExample\"\r\n                >\r\n                  <div className=\"accordion-body\">\r\n                    <>\r\n                      {list.name == props.listName ? (\r\n                        <section id=\"cart\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-12 cart\">\r\n                              <DisplayListitems\r\n                                wishListItems={props.wishListItems}\r\n                                setUserLists={props.setUserLists}\r\n                                userLists={props.userLists}\r\n                                userID={userID}\r\n                                listName={props.listName}\r\n                                setListName={props.setListName}\r\n                                setWishListChanged={props.setWishListChanged}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </section>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      <p>Click on the below List to View List Items</p>\r\n      <table className=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>List</th>\r\n            <th>View List Items</th>\r\n\r\n            <th>delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {lists && lists.length > 0\r\n            ? lists.map((list, index) => {\r\n                let row = index + 1;\r\n                return (\r\n                  <tr key={list} className=\"cursor-pointer\">\r\n                    <td>{row}</td>\r\n                    <td className=\"col-8\">{list.name}</td>\r\n                    <td\r\n                      onClick={() => {\r\n                        props.setListName(list.name);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-eye\" aria-hidden=\"true\"></i> View\r\n                    </td>\r\n                    <td\r\n                      onClick={() => {\r\n                        deleteWishLists(userID, list.name, props.setUserLists);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-trash\" aria-hidden=\"false\"></i>{\" \"}\r\n                      Delete\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </tbody>\r\n      </table>\r\n      <section id=\"cart\" className=\"card\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 cart\">\r\n            <DisplayListitems\r\n              wishListItems={props.wishListItems}\r\n              setUserLists={props.setUserLists}\r\n              userLists={props.userLists}\r\n              userID={userID}\r\n              listName={props.listName}\r\n              setListName={props.setListName}\r\n              setWishListChanged={props.setWishListChanged}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayLists;\r\n","D:\\modern\\src\\components\\account\\HomeTabContent.js",[],[],"D:\\modern\\src\\components\\account\\Layout.js",[],[],"D:\\modern\\src\\components\\account\\Order.js",["744"],[],"D:\\modern\\src\\components\\account\\OrdersTabContent.js",[],[],"D:\\modern\\src\\components\\account\\ShippingAddress.js",[],[],"D:\\modern\\src\\components\\account\\ShippingAddressTab.js",[],[],"D:\\modern\\src\\components\\account\\TabsHeadings.js",[],[],"D:\\modern\\src\\components\\account\\WishListTabContent.js",[],[],"D:\\modern\\src\\components\\cart\\BackButton.js",[],[],"D:\\modern\\src\\components\\cart\\CartContent.js",["745"],[],"import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n\r\nimport { UpdateCartQTY, removeItem } from \"../../controllers/cart\";\r\n\r\nconst CartContent = (props) => {\r\n  let { URL } = process.env;\r\n  let cart = [];\r\n  cart = props.cartItems;\r\n\r\n  if (!cart || cart.length < 1) {\r\n    cart = [];\r\n  }\r\n  return (\r\n    <section id=\"cartContent\">\r\n      <div className=\"row bg-light py-2 d-lg-flex d-md-flex d-none\">\r\n        <div className=\"col-2\">\r\n          <h5 className=\"mb-0\">Image</h5>\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <h5 className=\"mb-0\">Description</h5>\r\n        </div>\r\n        <div className=\"col-3\">\r\n          <h5 className=\"mb-0\">Quantity</h5>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <h5 className=\"mb-0\">Price</h5>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <h5 className=\"mb-0\">Total</h5>\r\n        </div>\r\n      </div>\r\n      {cart && cart.length > 0\r\n        ? cart.map((product) => {\r\n            return (\r\n              <div className=\"row \" key={product.name}>\r\n                <div className=\"row main align-items-center border-bottom py-0 px-0\">\r\n                  <div className=\"col-lg-2 col-md-2 col-sm-6 col-6\">\r\n                    <Link href={product.product_url}>\r\n                      <a>\r\n                        <img className=\"img-fluid\" src={product.image} title={product.image} alt={product.image} />\r\n                      </a>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-lg-3 col-md-3 col-sm-6 col-6\">\r\n                    <Link href={product.product_url}>\r\n                      <a>\r\n                        <div className=\"row pbrand\">\r\n                          {product.brand.toLowerCase()}\r\n                        </div>\r\n                        <div className=\"row pname\">\r\n                          {product.name.toLowerCase()}\r\n                        </div>\r\n                      </a>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-lg-3 col-md-3 col-sm-6 col-12 qtyInner\">\r\n                    <button\r\n                      className=\"minus\"\r\n                      onClick={(e) => {\r\n                        updateQTY(e, \"decrement\", product.id, props.setCart);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-minus\"></i>\r\n                    </button>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control  addminus\"\r\n                      defaultValue={product.qty}\r\n                      min=\"1\"\r\n                      id={\"qtyBox\" + product.id}\r\n                      name=\"qty\"\r\n                      onChange={(e) => {\r\n                        updateQTY(e, \"none\", product.id, props.setCart);\r\n                      }}\r\n                    />\r\n                    <button\r\n                      className=\"plus\"\r\n                      onClick={(e) => {\r\n                        updateQTY(e, \"increment\", product.id, props.setCart);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n\r\n                    <a\r\n                      href=\"javascript:void(0)\"\r\n                      className=\"p-0\"\r\n                      onClick={() => {\r\n                        removeItem(product.id, props.setCart);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-trash ml-1\"></i>\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"col-lg-2 col-md-2 col-sm-3 col-6\">\r\n                    <span className=\"pprice\">\r\n                      ${product.itemPrice.toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col-lg-2 col-md-2 col-sm-3 col-6\">\r\n                    <span className=\"pprice\">\r\n                      $ {product.total.toFixed(2)}{\" \"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        : \"\"}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CartContent;\r\nconst updateQTY = (e, action, id, setCart) => {\r\n  let cartQty = 0;\r\n  try {\r\n    cartQty = document.getElementById(\"qtyBox\" + id).value;\r\n  } catch (err) {}\r\n\r\n  if (cartQty.match(/[a-z]/i)) {\r\n    alert(\"Please Enter a Valid Number\");\r\n    document.getElementById(\"qtyBox\" + id).value = 1;\r\n    return;\r\n  }\r\n\r\n  if (action == \"increment\") {\r\n    cartQty = parseInt(cartQty) + 1;\r\n    document.getElementById(\"qtyBox\" + id).value = cartQty;\r\n  } else if (action == \"decrement\") {\r\n    cartQty = parseInt(cartQty) - 1;\r\n    if (cartQty < 1) {\r\n      cartQty = 1;\r\n    }\r\n    document.getElementById(\"qtyBox\" + id).value = cartQty;\r\n  } else {\r\n    if (cartQty < 1) {\r\n      cartQty = 1;\r\n    }\r\n    document.getElementById(\"qtyBox\" + id).value = cartQty;\r\n  }\r\n\r\n  UpdateCartQTY(e, id, setCart, cartQty);\r\n};\r\n","D:\\modern\\src\\components\\cart\\CartPopUP.js",["746","747","748","749"],[],"import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport { csHandleChange, getContinueShoppingURL } from \"../../controllers/cart\";\r\n\r\nconst CartPopUP = (props) => {\r\n  let { URL } = process.env;\r\n\r\n  let relatedProducts = [];\r\n\r\n  relatedProducts = props.products;\r\n  if (relatedProducts.length > 3) {\r\n    relatedProducts.length = 3;\r\n  }\r\n  let cart = [];\r\n\r\n  cart = props.cart;\r\n\r\n  if (!cart || cart.length < 1) {\r\n    cart = {};\r\n  }\r\n\r\n  let tempCart = [];\r\n\r\n  try {\r\n    tempCart = cart.filter((item) => item.id == props.ID);\r\n  } catch (err) {}\r\n\r\n  if (tempCart.length > 1) {\r\n    tempCart.length = 1;\r\n  }\r\n\r\n  let cartTotal = 0;\r\n  try {\r\n    cartTotal = cart.reduce((prod, { total }) => prod + total, 0);\r\n  } catch (err) {}\r\n\r\n  let shopURL = \"\";\r\n  shopURL = getContinueShoppingURL();\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"cartModal\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div\r\n        className=\"modal-dialog modal-lg modal-dialog-centered\"\r\n        role=\"document\"\r\n      >\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header border-bottom-0\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n              Added to Cart\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <section>\r\n              <div className=\"container\">\r\n                {tempCart && tempCart.length > 0\r\n                  ? tempCart.map((product) => {\r\n                      return (\r\n                        <div className=\"row\" key={product.name}>\r\n                          <div className=\"col-lg-4 col-md-4 col-sm-12\">\r\n                            <img src={product.image} width={120} />\r\n                          </div>\r\n                          <div className=\"col-lg-8 col-md-8 col-sm-12\">\r\n                            <span className=\"d-block\">{product.brand}</span>\r\n                            <span className=\"d-block\">\r\n                              {product.name.substring(1, 50) +\r\n                                \"...\" +\r\n                                \" - \" +\r\n                                product.id}\r\n                            </span>\r\n                            <span className=\"d-block\">Qty: {product.qty}</span>\r\n                            <span>Price: </span>\r\n                            <span>${product.itemPrice}</span>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  : \"\"}\r\n              </div>\r\n            </section>\r\n            <section>\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 mt-4\">\r\n                    <p>\r\n                      <strong>Cart subtotal: ${cartTotal}</strong> (\r\n                      {cart.length} items)\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <section>\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 cartbtn justify-content-stretch\">\r\n                    <button\r\n                      type=\"button\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                      onClick={() => {\r\n                        cartHandleChange(URL);\r\n                      }}\r\n                      className=\"primaryC col-lg-4 col-md-4 col-sm-4 m-2 align-left\"\r\n                    >\r\n                      Cart & Checkout\r\n                    </button>\r\n\r\n                    <button\r\n                      type=\"button\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                      onClick={() => {\r\n                        csHandleChange();\r\n                      }}\r\n                      className=\"secondaryC  col-lg-6 col-md-6 col-sm-6  align-right\"\r\n                    >\r\n                      Continue Shopping\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <section>\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12 col-md-12 col-sm-12 mt-4\">\r\n                    <p>\r\n                      <strong>You May Also Like</strong>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"featureProds\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  {relatedProducts && relatedProducts.length > 0\r\n                    ? relatedProducts.map((product) => {\r\n                        return (\r\n                          <div\r\n                            className=\"col-lg-4 col-md-4 col-sm-12 mt-4 mb-4\"\r\n                            key={product.name}\r\n                          >\r\n                            <img\r\n                              className=\"text-center\"\r\n                              src={product.image}\r\n                              width={120}\r\n                            />\r\n                            <span className=\"d-block mt-4\">\r\n                              {product.brand}\r\n                            </span>\r\n                            <span className=\"d-block\">\r\n                              {product.name.substring(1, 10) +\r\n                                \"...\" +\r\n                                \" - \" +\r\n                                product.id}{\" \"}\r\n                            </span>\r\n                            <span>Price: </span>\r\n                            <span>${product.price}</span>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst cartHandleChange = (URL) => {\r\n  Router.push(URL + \"/cart\");\r\n};\r\nexport default CartPopUP;\r\n","D:\\modern\\src\\components\\cart\\CartSummary.js",["750","751"],[],"import React from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nconst CartSummary = (props) => {\r\n  let { URL } = process.env;\r\n\r\n  let tax = 0.0;\r\n  let subTotal = 0;\r\n  let cart = [];\r\n  cart = props.cartItems;\r\n\r\n  if (!cart || cart.length < 1) {\r\n    cart = {};\r\n  }\r\n\r\n  let cartTotal = 0.0;\r\n\r\n  try {\r\n    cartTotal = cart.reduce((prod, { total }) => prod + total, 0);\r\n    cartTotal = cartTotal.toFixed(2);\r\n  } catch (err) {}\r\n  subTotal = cartTotal + tax;\r\n  return (\r\n    <section id=\"cartSummary\" className=\"col-md-4 col-sm-4 col-12 summary\">\r\n      <div>\r\n        <h5>\r\n          <b>Pricing Summary</b>\r\n        </h5>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col\" style={{ paddingLeft: 0 }}>\r\n          ITEMS{\" \"}\r\n        </div>\r\n        <div className=\"col text-right\">{cart.length}</div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col\" style={{ paddingLeft: 0 }}>\r\n          CART TOTAL\r\n        </div>\r\n        <div className=\"col text-right\">$ {cartTotal}</div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col\" style={{ paddingLeft: 0 }}>\r\n          TAX\r\n        </div>\r\n        <div className=\"col text-right\">$ 0.00</div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col\"style={{ paddingLeft: 0 }}><strong>TOTAL PRICE</strong></div>\r\n        <div className=\"col text-right\"> <strong>$ {subTotal}</strong></div>\r\n      </div>\r\n      <Link href={URL + \"/checkout\"}>\r\n        <a className=\"btn\"><img className=\"mr-2\" src={URL+\"/images/Group 131.svg\"}/>CHECKOUT</a>\r\n      </Link>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CartSummary;\r\n","D:\\modern\\src\\components\\cart\\CartTop.js",[],[],"D:\\modern\\src\\components\\cart\\EmptyCart.js",[],[],"D:\\modern\\src\\components\\cart\\Layout.js",[],[],"D:\\modern\\src\\components\\category\\BreadCrumbs.js",[],[],"D:\\modern\\src\\components\\category\\CategoryBanner.js",["752"],[],"import React from \"react\";\r\nimport Image from \"next/image\";\r\n\r\nconst CategoryBanner = (props) => {\r\n  let bannerPath = \"\";\r\n  let cmsPath = \"/ccms/default/assets/Image/\";\r\n  let imageExists = false;\r\n\r\n  let currentDEPT = \"\";\r\n  try {\r\n    currentDEPT = props.urlTaxonomy.DEPT;\r\n  } catch (err) {}\r\n\r\n  if (currentDEPT && currentDEPT != \"\") {\r\n    bannerPath =\r\n      \"https://template1.cumulusbetasites.com/ccms/default/assets/Image/\" +\r\n      currentDEPT +\r\n      \".jpg\";\r\n\r\n    try {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"HEAD\", bannerPath, false);\r\n      xhr.send();\r\n\r\n      if (xhr.status == \"404\") {\r\n        imageExists = false;\r\n      } else {\r\n        imageExists = true;\r\n      }\r\n    } catch (err) {\r\n      imageExists = false;\r\n    }\r\n  } else {\r\n    imageExists = false;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {imageExists ? (\r\n        <section id=\"banner-image-container\" className=\"col-12 mb-3\">\r\n          <img\r\n            src={bannerPath}\r\n            title={currentDEPT + \" PRODUCTS\"}\r\n            alt={currentDEPT + \" PRODUCTS\"}\r\n          />\r\n        </section>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryBanner;\r\n","D:\\modern\\src\\components\\category\\CategoryHeading.js",[],[],"D:\\modern\\src\\components\\category\\CurrentCount.js",[],[],"D:\\modern\\src\\components\\category\\Landing.js",[],[],"D:\\modern\\src\\components\\category\\LandingCategories.js",["753"],[],"import React, { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { useSelector } from \"react-redux\";\r\nconst LandingCategories = (props) => {\r\n  let { URL } = process.env;\r\n\r\n  let typs = [];\r\n\r\n  const categories = props.landingCategories;\r\n\r\n  try {\r\n    categories.map((elements) => {\r\n      if (elements.Dept == props.dept) {\r\n        typs = elements.Typs;\r\n      }\r\n    });\r\n  } catch (err) {}\r\n\r\n  return (\r\n    <>\r\n      <section id=\"CategoryProducts\" className=\"col-lg-12 col-md-10 col-12\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"row\">\r\n              {typs && typs.length > 0\r\n                ? typs.map((category) => {\r\n                    return (\r\n                      <div\r\n                        className=\"col-lg-3 col-md-6 col-sm-12 col-12 cat\"\r\n                        key={\"categories \" + category.typ_name}\r\n                      >\r\n                        <div className=\"inner innerMore styleMore\">\r\n                          <Link\r\n                            href={{\r\n                              pathname: `${URL}/category/[slug]`,\r\n                              query: { slug: category.typ_url },\r\n                            }}\r\n                          >\r\n                            <a>\r\n                              <img\r\n                                title={category.typ_name}\r\n                                alt={category.typ_name}\r\n                                className=\"cat-thumb\"\r\n                                src={category.prod_image}\r\n                              />\r\n\r\n                              {category.typ_name}\r\n                            </a>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingCategories;\r\n","D:\\modern\\src\\components\\category\\Layout.js",[],[],"D:\\modern\\src\\components\\category\\ListviewGridViewFilter.js",[],[],"D:\\modern\\src\\components\\category\\PaginationBottom.js",[],[],"D:\\modern\\src\\components\\category\\PaginationTop.js",[],[],"D:\\modern\\src\\components\\category\\ProductArea.js",[],[],"D:\\modern\\src\\components\\category\\SeoText.js",[],[],"D:\\modern\\src\\components\\category\\SmartSearch.js",["754","755"],[],"import React from \"react\";\r\nimport { RefineSearch, ReSearch } from \"../../controllers/category\";\r\n\r\nconst SmartSearch = (props) => {\r\n  let searchTXT = \"\";\r\n  if (props.isSearch && props.isSearch == \"yes\") {\r\n    searchTXT = props.slug;\r\n  }\r\n  let branURL = \"\";\r\n  return (\r\n    <section id=\"cat-search-container\" className=\"row position-relative\">\r\n      <div className=\"col-12\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"w-100 border-1 mb-4 py-2 pl-2\"\r\n          placeholder=\"Search Here\"\r\n          name=\"searchProds\"\r\n          id=\"searchProds\"\r\n          defaultValue={searchTXT}\r\n          onChange={(e) => {\r\n            RefineSearch(e, props.setSearchText);\r\n          }}\r\n          onLoad={ReSearch(props.setSearchText, searchTXT)}\r\n        />\r\n        <button type=\"button\"><img src=\"http://localhost:3000/images/header_search_icon.png\" /></button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SmartSearch;\r\n","D:\\modern\\src\\components\\category\\SortByProperty.js",[],[],"D:\\modern\\src\\components\\category\\Thumbnail.js",[],[],"D:\\modern\\src\\components\\category\\ViewByNumber.js",[],[],"D:\\modern\\src\\components\\checkout\\BillingInfo.js",[],[],"D:\\modern\\src\\components\\checkout\\Cart.js",["756","757","758","759","760","761","762","763","764","765"],[],"import React from \"react\";\r\nimport { removeItem, UpdateCartQTY } from \"../../controllers/cart\";\r\n\r\nconst Cart = (props) => {\r\n  let cart = [];\r\n  cart = props.cart;\r\n  if (!cart || cart.length < 1) {\r\n    cart = [];\r\n  }\r\n  let { URL } = process.env;\r\n  let total = 0;\r\n  return (\r\n    <>\r\n      {cart && cart.length > 0\r\n        ? cart.map((product) => {\r\n            let prodName = \"\";\r\n            prodName = product.name;\r\n            if (prodName.length > 30) {\r\n              prodName = prodName.substring(0, 300);\r\n              prodName = prodName + \"...\";\r\n\r\n              try {\r\n                total = product.qty * product.total;\r\n              } catch (err) {}\r\n            }\r\n            return (\r\n              <article className=\"row product m-sm-4 m-2\" key={product.name}>\r\n                <div className=\"col px-sm-3 px-2 pt-3 pb-3 d-flex justify-content-center col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                  <img src={product.image} className=\"product-img\" title={product.image} alt={product.image} />\r\n                </div>\r\n                <div className=\"col px-sm-3 px-2 pt-3 col-lg-8 col-md-12 col-sm-12 col-12\">\r\n                  <div className=\"d-flex flex-column justify-content-between\">\r\n                    <span href=\"#\" className=\"text-decoration-none pb-3 name\">\r\n                      {prodName}\r\n                    </span>\r\n                    <div className=\"d-flex row mx-0\">\r\n                      <div className=\"d-flex flex-column attr col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                        <div>Price: ${product.itemPrice}</div>\r\n                      </div>\r\n                      <div className=\"d-flex flex-column col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div\r\n                            className=\"btn btn-primary\"\r\n                            onClick={(e) => {\r\n                              updateQTY(\r\n                                e,\r\n                                \"increment\",\r\n                                product.id,\r\n                                props.setCart\r\n                              );\r\n                            }}\r\n                          >\r\n                            \r\n                            <span className=\"fas fa-minus\"></span>\r\n                          </div>\r\n                          <div className=\"bg-light number\">\r\n                            <input\r\n                              defaultValue={product.qty}\r\n                              type=\"text\"\r\n                              id={\"qtyBox\" + product.id}\r\n                              onChange={(e) => {\r\n                                updateQTY(e, \"none\", product.id, props.setCart);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className=\"btn btn-primary\"\r\n                            onClick={(e) => {\r\n                              updateQTY(\r\n                                e,\r\n                                \"decrement\",\r\n                                product.id,\r\n                                props.setCart\r\n                              );\r\n                            }}\r\n                          >\r\n                            <span className=\"fas fa-plus\"></span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"border-0 col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                        <div className=\"w-100\">\r\n                          <span className=\"total\">Total Price</span>\r\n                          <span className=\"final\">${total}</span>\r\n                        </div>\r\n                        <img\r\n                          className=\"mr-1\"\r\n                          alt=\"delete\"\r\n                          title=\"delete\"\r\n                          src={URL + \"/images/trash-2.svg\"}\r\n                          onClick={() => {\r\n                            removeItem(product.id, props.setCart);\r\n                          }}\r\n                        />\r\n                        <span>remove</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </article>\r\n            );\r\n          })\r\n        : \"\"}\r\n\r\n          {cart && cart.length > 0\r\n            ? cart.map((product) => {\r\n                let prodName = \"\";\r\n                prodName = product.name;\r\n                if (prodName.length > 30) {\r\n                  prodName = prodName.substring(0, 300);\r\n                  prodName = prodName + \"...\";\r\n\r\n                  try {\r\n                    total = product.qty * product.total;\r\n                  } catch (err) {}\r\n                }\r\n                return (\r\n                  <article className=\"row product m-sm-4 m-2\" key={product.name}>\r\n                    <div className=\"col px-sm-3 px-2 pt-3 pb-3 d-flex justify-content-center col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                      <img src={product.image} title={product.image} alt={product.image} className=\"product-img\" />\r\n                    </div>\r\n                    <div className=\"col px-sm-3 px-2 pt-3 col-lg-8 col-md-12 col-sm-12 col-12\">\r\n                      <div className=\"d-flex flex-column justify-content-between\">\r\n                        <span href=\"#\" className=\"text-decoration-none pb-3 name\">\r\n                          {prodName}\r\n                        </span>\r\n                        <div className=\"d-flex row mx-0\">\r\n                          <div className=\"d-flex flex-column attr col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                            <div>Price: ${product.itemPrice}</div>\r\n                          </div>\r\n                          <div className=\"d-flex flex-column col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div\r\n                                className=\"btn btn-primary\"\r\n                                onClick={(e) => {\r\n                                  updateQTY(\r\n                                    e,\r\n                                    \"increment\",\r\n                                    product.id,\r\n                                    props.setCart\r\n                                  );\r\n                                }}\r\n                              >\r\n                                \r\n                                <span className=\"fas fa-minus\"></span>\r\n                              </div>\r\n                              <div className=\"bg-light number\">\r\n                                <input\r\n                                  defaultValue={product.qty}\r\n                                  type=\"text\"\r\n                                  id={\"qtyBox\" + product.id}\r\n                                  onChange={(e) => {\r\n                                    updateQTY(e, \"none\", product.id, props.setCart);\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className=\"btn btn-primary\"\r\n                                onClick={(e) => {\r\n                                  updateQTY(\r\n                                    e,\r\n                                    \"decrement\",\r\n                                    product.id,\r\n                                    props.setCart\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <span className=\"fas fa-plus\"></span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"border-0 col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"w-100\">\r\n                              <span className=\"total\">Total Price</span>\r\n                              <span className=\"final\">${total}</span>\r\n                            </div>\r\n                            <img\r\n                              className=\"mr-1\"\r\n                              alt=\"delete\"\r\n                              title=\"delete\"\r\n                              src={URL + \"/images/trash-2.svg\"}\r\n                              onClick={() => {\r\n                                removeItem(product.id, props.setCart);\r\n                              }}\r\n                            />\r\n                            <span>remove</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                );\r\n              })\r\n          : \"\"}\r\n\r\n{cart && cart.length > 0\r\n            ? cart.map((product) => {\r\n                let prodName = \"\";\r\n                prodName = product.name;\r\n                if (prodName.length > 30) {\r\n                  prodName = prodName.substring(0, 300);\r\n                  prodName = prodName + \"...\";\r\n\r\n                  try {\r\n                    total = product.qty * product.total;\r\n                  } catch (err) {}\r\n                }\r\n                return (\r\n                  <article className=\"row product m-sm-4 m-2\" key={product.name}>\r\n                    <div className=\"col px-sm-3 px-2 pt-3 pb-3 d-flex justify-content-center col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                      <img src={product.image} title={product.image} alt={product.image} className=\"product-img\" />\r\n                    </div>\r\n                    <div className=\"col px-sm-3 px-2 pt-3 col-lg-8 col-md-12 col-sm-12 col-12\">\r\n                      <div className=\"d-flex flex-column justify-content-between\">\r\n                        <span href=\"#\" className=\"text-decoration-none pb-3 name\">\r\n                          {prodName}\r\n                        </span>\r\n                        <div className=\"d-flex row mx-0\">\r\n                          <div className=\"d-flex flex-column attr col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                            <div>Price: ${product.itemPrice}</div>\r\n                          </div>\r\n                          <div className=\"d-flex flex-column col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div\r\n                                className=\"btn btn-primary\"\r\n                                onClick={(e) => {\r\n                                  updateQTY(\r\n                                    e,\r\n                                    \"increment\",\r\n                                    product.id,\r\n                                    props.setCart\r\n                                  );\r\n                                }}\r\n                              >\r\n                                \r\n                                <span className=\"fas fa-minus\"></span>\r\n                              </div>\r\n                              <div className=\"bg-light number\">\r\n                                <input\r\n                                  defaultValue={product.qty}\r\n                                  type=\"text\"\r\n                                  id={\"qtyBox\" + product.id}\r\n                                  onChange={(e) => {\r\n                                    updateQTY(e, \"none\", product.id, props.setCart);\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className=\"btn btn-primary\"\r\n                                onClick={(e) => {\r\n                                  updateQTY(\r\n                                    e,\r\n                                    \"decrement\",\r\n                                    product.id,\r\n                                    props.setCart\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <span className=\"fas fa-plus\"></span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"border-0 col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"w-100\">\r\n                              <span className=\"total\">Total Price</span>\r\n                              <span className=\"final\">${total}</span>\r\n                            </div>\r\n                            <img\r\n                              className=\"mr-1\"\r\n                              alt=\"delete\"\r\n                              title=\"delete\"\r\n                              src={URL + \"/images/trash-2.svg\"}\r\n                              onClick={() => {\r\n                                removeItem(product.id, props.setCart);\r\n                              }}\r\n                            />\r\n                            <span>remove</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                );\r\n              })\r\n          : \"\"}\r\n\r\n{cart && cart.length > 0\r\n            ? cart.map((product) => {\r\n                let prodName = \"\";\r\n                prodName = product.name;\r\n                if (prodName.length > 30) {\r\n                  prodName = prodName.substring(0, 300);\r\n                  prodName = prodName + \"...\";\r\n\r\n                  try {\r\n                    total = product.qty * product.total;\r\n                  } catch (err) {}\r\n                }\r\n                return (\r\n                  <article className=\"row product m-sm-4 m-2\" key={product.name}>\r\n                    <div className=\"col px-sm-3 px-2 pt-3 pb-3 d-flex justify-content-center col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                      <img src={product.image} title={product.image} alt={product.image} className=\"product-img\" />\r\n                    </div>\r\n                    <div className=\"col px-sm-3 px-2 pt-3 col-lg-8 col-md-12 col-sm-12 col-12\">\r\n                      <div className=\"d-flex flex-column justify-content-between\">\r\n                        <span href=\"#\" className=\"text-decoration-none pb-3 name\">\r\n                          {prodName}\r\n                        </span>\r\n                        <div className=\"d-flex row mx-0\">\r\n                          <div className=\"d-flex flex-column attr col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                            <div>Price: ${product.itemPrice}</div>\r\n                          </div>\r\n                          <div className=\"d-flex flex-column col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div\r\n                                className=\"btn btn-primary\"\r\n                                onClick={(e) => {\r\n                                  updateQTY(\r\n                                    e,\r\n                                    \"increment\",\r\n                                    product.id,\r\n                                    props.setCart\r\n                                  );\r\n                                }}\r\n                              >\r\n                                \r\n                                <span className=\"fas fa-minus\"></span>\r\n                              </div>\r\n                              <div className=\"bg-light number\">\r\n                                <input\r\n                                  defaultValue={product.qty}\r\n                                  type=\"text\"\r\n                                  id={\"qtyBox\" + product.id}\r\n                                  onChange={(e) => {\r\n                                    updateQTY(e, \"none\", product.id, props.setCart);\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className=\"btn btn-primary\"\r\n                                onClick={(e) => {\r\n                                  updateQTY(\r\n                                    e,\r\n                                    \"decrement\",\r\n                                    product.id,\r\n                                    props.setCart\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <span className=\"fas fa-plus\"></span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"border-0 col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"w-100\">\r\n                              <span className=\"total\">Total Price</span>\r\n                              <span className=\"final\">${total}</span>\r\n                            </div>\r\n                            <img\r\n                              className=\"mr-1\"\r\n                              alt=\"delete\"\r\n                              title=\"delete\"\r\n                              src={URL + \"/images/trash-2.svg\"}\r\n                              onClick={() => {\r\n                                removeItem(product.id, props.setCart);\r\n                              }}\r\n                            />\r\n                            <span>remove</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                );\r\n              })\r\n          : \"\"}\r\n\r\n{cart && cart.length > 0\r\n            ? cart.map((product) => {\r\n                let prodName = \"\";\r\n                prodName = product.name;\r\n                if (prodName.length > 30) {\r\n                  prodName = prodName.substring(0, 300);\r\n                  prodName = prodName + \"...\";\r\n\r\n                  try {\r\n                    total = product.qty * product.total;\r\n                  } catch (err) {}\r\n                }\r\n                return (\r\n                  <article className=\"row product m-sm-4 m-2\" key={product.name}>\r\n                    <div className=\"col px-sm-3 px-2 pt-3 pb-3 d-flex justify-content-center col-lg-4 col-md-12 col-sm-12 col-12\">\r\n                      <img src={product.image} title={product.image} alt={product.image} className=\"product-img\" />\r\n                    </div>\r\n                    <div className=\"col px-sm-3 px-2 pt-3 col-lg-8 col-md-12 col-sm-12 col-12\">\r\n                      <div className=\"d-flex flex-column justify-content-between\">\r\n                        <span href=\"#\" className=\"text-decoration-none pb-3 name\">\r\n                          {prodName}\r\n                        </span>\r\n                        <div className=\"d-flex row mx-0\">\r\n                          <div className=\"d-flex flex-column attr col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                            <div>Price: ${product.itemPrice}</div>\r\n                          </div>\r\n                          <div className=\"d-flex flex-column col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div\r\n                                className=\"btn btn-primary\"\r\n                                onClick={(e) => {\r\n                                  updateQTY(\r\n                                    e,\r\n                                    \"increment\",\r\n                                    product.id,\r\n                                    props.setCart\r\n                                  );\r\n                                }}\r\n                              >\r\n                                \r\n                                <span className=\"fas fa-minus\"></span>\r\n                              </div>\r\n                              <div className=\"bg-light number\">\r\n                                <input\r\n                                  defaultValue={product.qty}\r\n                                  type=\"text\"\r\n                                  id={\"qtyBox\" + product.id}\r\n                                  onChange={(e) => {\r\n                                    updateQTY(e, \"none\", product.id, props.setCart);\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className=\"btn btn-primary\"\r\n                                onClick={(e) => {\r\n                                  updateQTY(\r\n                                    e,\r\n                                    \"decrement\",\r\n                                    product.id,\r\n                                    props.setCart\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <span className=\"fas fa-plus\"></span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"border-0 col-lg-3 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"w-100\">\r\n                              <span className=\"total\">Total Price</span>\r\n                              <span className=\"final\">${total}</span>\r\n                            </div>\r\n                            <img\r\n                              className=\"mr-1\"\r\n                              alt=\"delete\"\r\n                              title=\"delete\"\r\n                              src={URL + \"/images/trash-2.svg\"}\r\n                              onClick={() => {\r\n                                removeItem(product.id, props.setCart);\r\n                              }}\r\n                            />\r\n                            <span>remove</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </article>\r\n                );\r\n              })\r\n          : \"\"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n\r\nconst updateQTY = (e, action, id, setCart) => {\r\n  let cartQty = 0;\r\n  try {\r\n    cartQty = document.getElementById(\"qtyBox\" + id).value;\r\n  } catch (err) {}\r\n\r\n  if (cartQty.match(/[a-z]/i)) {\r\n    alert(\"Please Enter a Valid Number\");\r\n    document.getElementById(\"qtyBox\" + id).value = 1;\r\n    return;\r\n  }\r\n\r\n  if (action == \"increment\") {\r\n    cartQty = parseInt(cartQty) + 1;\r\n    document.getElementById(\"qtyBox\" + id).value = cartQty;\r\n  } else if (action == \"decrement\") {\r\n    cartQty = parseInt(cartQty) - 1;\r\n    if (cartQty < 1) {\r\n      cartQty = 1;\r\n    }\r\n    document.getElementById(\"qtyBox\" + id).value = cartQty;\r\n  } else {\r\n    if (cartQty < 1) {\r\n      cartQty = 1;\r\n    }\r\n    document.getElementById(\"qtyBox\" + id).value = cartQty;\r\n  }\r\n\r\n  UpdateCartQTY(e, id, setCart, cartQty);\r\n};\r\n","D:\\modern\\src\\components\\checkout\\Heading.js",[],[],"D:\\modern\\src\\components\\checkout\\Layout.js",[],[],"D:\\modern\\src\\components\\checkout\\OrderAdditional.js",[],[],"D:\\modern\\src\\components\\checkout\\OrderSummary.js",[],[],"D:\\modern\\src\\components\\checkout\\PaymentInfo.js",["766"],[],"import React from \"react\";\r\nimport Router from \"next/router\";\r\n\r\nimport { processPaymentPaypal } from \"../../controllers/paypal\";\r\nimport { paymentAuthorize } from \"../../controllers/authorize.net\";\r\nimport {\r\n  validate,\r\n  autoValidate,\r\n  validatedStatus,\r\n} from \"../../controllers/smartValidator\";\r\nlet validated = true;\r\nconst PaymentInfo = (props) => {\r\n  autoValidate();\r\n  return (\r\n    <fieldset className=\"wizard-fieldset\">\r\n      <h5>Payment Information</h5>\r\n      <div className=\"checkout-paypal\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            processPaymentPaypal(e, props.currency, props.grandTotal);\r\n          }}\r\n        >\r\n          <img\r\n            id=\"checkout\"\r\n            src=\"https://thepediazone.com/wp-content/uploads/2021/04/paypal-information.png\"\r\n            alt=\"\"\r\n          />\r\n          Checkout\r\n        </button>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <div className=\"payment-methods\">\r\n          <span>We Accept</span> <i className=\"fab fa-cc-visa\"></i>\r\n          <i className=\"fab fa-cc-mastercard\"></i>\r\n          <i className=\"fab fa-cc-amex\"></i>\r\n        </div>\r\n      </div>\r\n      <form name=\"cardForm\" id=\"cardForm\" method=\"\" action=\"\">\r\n        <div className=\"form-group\">\r\n          <label className=\"wizard-form-text-label\">Name On Card*</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control wizard-required\"\r\n            id=\"cardHolder\"\r\n            name=\"Name on Card\"\r\n            isAlpha=\"true\"\r\n          />\r\n          <div id=\"cardHolder-error\" className=\"text-danger\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"form-group\">\r\n              <label className=\"wizard-form-text-label\">Card Number*</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control wizard-required\"\r\n                id=\"cardNumber\"\r\n                name=\"Card Number\"\r\n                isCreditCard=\"true\"\r\n              />\r\n              <div id=\"cardNumber-error\" className=\"text-danger\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <label className=\"wizard-form-text-label\">Expiration Date*</label>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 col-sm-6\">\r\n            <div className=\"form-group\">\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"expiryMonth\"\r\n                name=\"Expiry Month\"\r\n                isRequired=\"true\"\r\n              >\r\n                <option value=\"\">Month</option>\r\n                <option value=\"1\">jan</option>\r\n                <option value=\"2\">Feb</option>\r\n                <option value=\"3\">March</option>\r\n                <option value=\"4\">April</option>\r\n                <option value=\"5\">May</option>\r\n                <option value=\"6\">June</option>\r\n                <option value=\"7\">Jully</option>\r\n                <option value=\"8\">August</option>\r\n                <option value=\"9\">Sept</option>\r\n                <option value=\"10\">Oct</option>\r\n                <option value=\"11\">Nov</option>\r\n                <option value=\"12\">Dec</option>\r\n              </select>\r\n              <div id=\"expiryMonth-error\" className=\"text-danger\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 col-sm-6\">\r\n            <div className=\"form-group\">\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"Expiry Year\"\r\n                id=\"expiryYear\"\r\n                isRequired=\"true\"\r\n              >\r\n                <option value=\"\">Years</option>\r\n                <option value=\"2019\">2019</option>\r\n                <option value=\"2020\">2020</option>\r\n                <option value=\"2021\">2021</option>\r\n                <option value=\"2022\">2022</option>\r\n                <option value=\"2023\">2023</option>\r\n                <option value=\"2024\">2024</option>\r\n                <option value=\"2025\">2025</option>\r\n                <option value=\"2026\">2026</option>\r\n                <option value=\"2027\">2027</option>\r\n                <option value=\"2028\">2028</option>\r\n                <option value=\"2029\">2029</option>\r\n                <option value=\"2030\">2030</option>\r\n                <option value=\"2031\">2031</option>\r\n                <option value=\"2032\">2032</option>\r\n                <option value=\"2033\">2033</option>\r\n                <option value=\"2034\">2034</option>\r\n                <option value=\"2035\">2035</option>\r\n                <option value=\"2036\">2036</option>\r\n                <option value=\"2037\">2037</option>\r\n                <option value=\"2038\">2038</option>\r\n                <option value=\"2039\">2039</option>\r\n                <option value=\"2040\">2040</option>\r\n              </select>\r\n              <div id=\"expiryYear-error\" className=\"text-danger\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"form-group\">\r\n              <label className=\"wizard-form-text-label\">CVV2*</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control wizard-required\"\r\n                id=\"cvv2\"\r\n                name=\"cvv\"\r\n                isCvv=\"true\"\r\n              />\r\n              <div id=\"cvv2-error\" className=\"text-danger\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n            <input\r\n              type=\"button\"\r\n              name=\"orderSubmit\"\r\n              value=\"Submit Your Order\"\r\n              className=\"text-light bg-dark\"\r\n              onClick={(e) => {\r\n                validate(\"cardForm\");\r\n                if (validatedStatus == true) {\r\n                  paymentAuthorize(e, props.setCart);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div className=\"form-group clearfix\">\r\n        <a href=\"javascript:;\" className=\"form-wizard-previous-btn float-left\">\r\n          Previous\r\n        </a>\r\n      </div>\r\n      <div\r\n        id=\"paymentAlert\"\r\n        className=\"alert alert-info d-none\"\r\n        role=\"alert\"\r\n      ></div>\r\n    </fieldset>\r\n  );\r\n};\r\nexport default PaymentInfo;\r\n","D:\\modern\\src\\components\\checkout\\ReturningCustomer.js",[],[],"D:\\modern\\src\\components\\checkout\\ShippingInfo.js",[],[],"D:\\modern\\src\\components\\checkout\\ShippingMethods.js",[],[],"D:\\modern\\src\\components\\checkout\\WizardDots.js",[],[],"D:\\modern\\src\\components\\footer\\CompanyIntro.js",["767","768"],[],"import React from \"react\";\r\nimport Link from \"next/link\";\r\nconst CompanyIntro = () => {\r\n  let { URL } = process.env;\r\n\r\n  return (\r\n    <section className=\"col-lg-3 col-md-6 col-12 unique\">\r\n      <h4\r\n        className=\"nav-title collapsed\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#accordtwo\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        company info\r\n      </h4>\r\n      <div id=\"accordtwo\" className=\"collapse\">\r\n        <p>\r\n          <Link href={URL + \"/info/privacy-policy\"}>\r\n            <a>\r\n               Privacy Policy\r\n            </a>\r\n          </Link>\r\n          <Link href={URL + \"/info/about-us\"}>\r\n            <a>\r\n              About Us\r\n            </a>\r\n          </Link>\r\n          <Link href={URL + \"/info/shipping-and-return\"}>\r\n            <a>\r\n              Shipping and Returns\r\n            </a>\r\n          </Link>\r\n        </p>\r\n        <h4\r\n          className=\"nav-title collapsed\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#accordtwo\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          Working Hours\r\n        </h4>\r\n        <p>Monday - Friday 10AM - 8PM, Saturday 10AM - 6PM</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CompanyIntro;\r\n","D:\\modern\\src\\components\\footer\\CustomerService.js",["769"],[],"import React from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nconst CustomerService = () => {\r\n  let { URL } = process.env;\r\n\r\n  return (\r\n    <section className=\"col-lg-3 col-md-6 col-12 unique\">\r\n      <h4\r\n        className=\"nav-title collapsed\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#accordzero\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        customer service\r\n      </h4>\r\n      <div id=\"accordzero\" className=\"collapse\">\r\n        <p>\r\n          <Link href={URL + \"/info/your-account\"}>\r\n            <a>\r\n             Your Account\r\n            </a>\r\n          </Link>\r\n          <Link href={URL + \"/info/contact-us\"}>\r\n            <a>\r\n              Contact Us\r\n            </a>\r\n          </Link>\r\n          <Link href={URL + \"/info/gift-cards\"}>\r\n            <a>\r\n              Gift Cards\r\n            </a>\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CustomerService;\r\n","D:\\modern\\src\\components\\footer\\Footer.js",[],[],"D:\\modern\\src\\components\\footer\\FooterBottom.js",["770"],[],"import React from \"react\";\r\n\r\nconst FooterBottom = () => {\r\n  let { URL } = process.env;\r\n  return (\r\n    <section id=\"footer-bottom\">\r\n      <section className=\"copyright container\">\r\n        <div className=\"row\">\r\n        <section className=\"col-lg-4 col-md-4 col-12 text-left company\">\r\n            <p>\r\n              ecommerce site by{\" \"}\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://www.celerant.com/cumulus-retail/\"\r\n              >\r\n                <img\r\n                  alt=\"Cumulus retail logo\"\r\n                  src={URL+\"/images/iCumulus-logo.png\"}\r\n                  height=\"100\"\r\n                  width=\"100\"\r\n                />\r\n              </a>\r\n            </p>\r\n          </section>\r\n\r\n          <section className=\"col-lg-4 col-md-3 col-12 text-center reserve\">\r\n            <p>\r\n              © <span id=\"demo\">2022</span>&nbsp;All Rights Reserved by Cumulus.\r\n            </p>\r\n          </section>\r\n          <section className=\"col-lg-4 col-md-5 col-12 payment\">\r\n          <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href=\"/\"\r\n              >\r\n                Terms of Use\r\n              </a>\r\n\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href=\"/\"\r\n              >\r\n                Privacy Policy\r\n              </a>\r\n          </section>\r\n          \r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FooterBottom;\r\n","D:\\modern\\src\\components\\footer\\Information.js",["771"],[],"import React from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nconst Information = () => {\r\n  let { URL } = process.env;\r\n\r\n  return (\r\n    <section className=\"col-lg-3 col-md-6 col-12 unique\">\r\n      <h4\r\n        className=\"nav-title collapsed\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#accordone\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        information\r\n      </h4>\r\n      <div id=\"accordone\" className=\"collapse\">\r\n        <p>\r\n          <Link href={URL + \"/info/terms-and-conditions\"}>\r\n            <a>\r\n             Terms and Conditions\r\n            </a>\r\n          </Link>\r\n          <Link href={URL + \"/info/visit-our-blog\"}>\r\n            <a>\r\n              Visit Our Blog\r\n            </a>\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","D:\\modern\\src\\components\\footer\\NewsLetter.js",[],[],"D:\\modern\\src\\components\\header\\DropCart.js",["772","773"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { removeItem, UpdateCartQTY } from \"../../controllers/cart\";\r\n\r\nconst DropCart = (props) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [checkcart, setcheckCart] = useState([]);\r\n\r\n  let { URL } = process.env;\r\n\r\n  let cartItems = [];\r\n  cartItems = props.cartItems;\r\n  if (!cartItems || cartItems.length < 1) {\r\n    cartItems = [];\r\n  }\r\n  let subtotal = 0;\r\n  try {\r\n    subtotal = cartItems.reduce((prod, { total }) => prod + total, 0);\r\n  } catch (err) {}\r\n\r\n  return (\r\n    <div className=\"mini-cart \">\r\n      <div id=\"cartDrpDown\" className=\"sub-menu mini-cart-content\">\r\n        <div className=\"mini-cart \">\r\n          <div className=\"content-inner\">\r\n            <h3 className=\"box-title\">\r\n              <Link href=\"/cart\">\r\n                <a className=\"edtCart\">edit cart</a>\r\n              </Link>\r\n              <a\r\n                href={void 0}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n                id=\"dropCartCloser\"\r\n                className=\"close\"\r\n              >\r\n                x\r\n              </a>\r\n            </h3>\r\n            <p className=\"cartItem\">\r\n              items in cart: <span className=\"count\">{cartItems.length}</span>\r\n            </p>\r\n            <ul className=\"list-item-cart overflow\">\r\n              {cartItems.map((product) => {\r\n                return (\r\n                  <li className=\"item-cart active\" key={product.name}>\r\n                    <div className=\"thumb\">\r\n                      <Link href={URL + product.product_url}>\r\n                        <a className=\"image anchor\" title={product.name}>\r\n                          <img src={product.image} alt={product.name} />\r\n                        </a>\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"product-info\">\r\n                      <span className=\"productBrand\">{product.brand}</span>\r\n                      <h4 className=\"product-name\">\r\n                        <Link href={URL + product.product_url}>\r\n                          <a href=\"\" className=\"anchor\">\r\n                            {product.name}\r\n                          </a>\r\n                        </Link>\r\n                      </h4>\r\n                      <span className=\"price\">Price: {product.itemPrice}</span>\r\n                      <span className=\"price\">QTY: {product.qty}</span>\r\n                      <span className=\"price\">\r\n                        Total: ${product.total.toFixed(2)}\r\n                      </span>\r\n\r\n                      <p>\r\n                        <div\r\n                          id=\"cart\"\r\n                          className=\"col-lg-8 col-md-8 col-sm-6 col-8 qtyInner p-0\"\r\n                        >\r\n                          <button\r\n                            className=\"minus\"\r\n                            onClick={(e) => {\r\n                              updateQTY(\r\n                                e,\r\n                                \"decrement\",\r\n                                product.id,\r\n                                props.setCart\r\n                              );\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-minus\"></i>\r\n                          </button>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control  addminus\"\r\n                            value={product.qty}\r\n                            min=\"1\"\r\n                            id={\"qtyBox1\" + product.id}\r\n                            name=\"qty\"\r\n                            onChange={(e) => {\r\n                              updateQTY(e, \"none\", product.id, props.setCart);\r\n                            }}\r\n                          />\r\n                          <button\r\n                            className=\"plus\"\r\n                            onClick={(e) => {\r\n                              updateQTY(\r\n                                e,\r\n                                \"increment\",\r\n                                product.id,\r\n                                props.setCart\r\n                              );\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-plus\"></i>\r\n                          </button>\r\n                        </div>\r\n                        <span>|</span>\r\n                        <a\r\n                          href=\"javascript:0\"\r\n                          className=\"\"\r\n                          onClick={() => {\r\n                            removeItem(product.id, props.setCart);\r\n                          }}\r\n                          data-index=\"11358\"\r\n                        >\r\n                          remove\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n\r\n              {cartItems.map((product) => {\r\n                return (\r\n                  <li className=\"item-cart active\" key={product.name}>\r\n                    <div className=\"thumb\">\r\n                      <Link href={URL + product.product_url}>\r\n                        <a className=\"image anchor\" title={product.name}>\r\n                          <img src={product.image} alt={product.name} />\r\n                        </a>\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"product-info\">\r\n                      <span className=\"productBrand\">{product.brand}</span>\r\n                      <h4 className=\"product-name\">\r\n                        <Link href={URL + product.product_url}>\r\n                          <a href=\"\" className=\"anchor\">\r\n                            {product.name}\r\n                          </a>\r\n                        </Link>\r\n                      </h4>\r\n                      <span className=\"price\">Price: {product.itemPrice}</span>\r\n                      <span className=\"price\">QTY: {product.qty}</span>\r\n                      <span className=\"price\">\r\n                        Total: ${product.total.toFixed(2)}\r\n                      </span>\r\n\r\n                      <p>\r\n                        <div\r\n                          id=\"cart\"\r\n                          className=\"col-lg-8 col-md-8 col-sm-6 col-8 qtyInner p-0\"\r\n                        >\r\n                          <button\r\n                            className=\"minus\"\r\n                            onClick={(e) => {\r\n                              updateQTY(\r\n                                e,\r\n                                \"decrement\",\r\n                                product.id,\r\n                                props.setCart\r\n                              );\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-minus\"></i>\r\n                          </button>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control  addminus\"\r\n                            value={product.qty}\r\n                            min=\"1\"\r\n                            id={\"qtyBox1\" + product.id}\r\n                            name=\"qty\"\r\n                            onChange={(e) => {\r\n                              updateQTY(e, \"none\", product.id, props.setCart);\r\n                            }}\r\n                          />\r\n                          <button\r\n                            className=\"plus\"\r\n                            onClick={(e) => {\r\n                              updateQTY(\r\n                                e,\r\n                                \"increment\",\r\n                                product.id,\r\n                                props.setCart\r\n                              );\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-plus\"></i>\r\n                          </button>\r\n                        </div>\r\n                        <span>|</span>\r\n                        <a\r\n                          href=\"javascript:0\"\r\n                          className=\"\"\r\n                          onClick={() => {\r\n                            removeItem(product.id, props.setCart);\r\n                          }}\r\n                          data-index=\"11358\"\r\n                        >\r\n                          remove\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <div className=\"subtotal\">\r\n              <p>\r\n                Subtotal:{\" \"}\r\n                <span className=\"amount float-right\">\r\n                  ${subtotal.toFixed(2)}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"action-btn\">\r\n              <Link href=\"/checkout\">\r\n                <a id=\"cartCloser1\" className=\"btn btn-primary w-100\">\r\n                  CHECKOUT\r\n                </a>\r\n              </Link>\r\n              <br clear=\"all\" />\r\n              <Link href=\"/cart\">\r\n                <a id=\"cartCloser2\" className=\"btn btn-secondary w-100\">\r\n                  SHOPPING BAG\r\n                </a>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropCart;\r\nconst updateQTY = (e, action, id, setCart) => {\r\n  let cartQty = 0;\r\n  try {\r\n    cartQty = document.getElementById(\"qtyBox1\" + id).value;\r\n  } catch (err) {}\r\n\r\n  if (cartQty.match(/[a-z]/i)) {\r\n    alert(\"Please Enter a Valid Number\");\r\n    document.getElementById(\"qtyBox1\" + id).value = 1;\r\n    return;\r\n  }\r\n\r\n  if (action == \"increment\") {\r\n    cartQty = parseInt(cartQty) + 1;\r\n    document.getElementById(\"qtyBox1\" + id).value = cartQty;\r\n  } else if (action == \"decrement\") {\r\n    cartQty = parseInt(cartQty) - 1;\r\n    if (cartQty < 1) {\r\n      cartQty = 1;\r\n    }\r\n    document.getElementById(\"qtyBox1\" + id).value = cartQty;\r\n  } else {\r\n    if (cartQty < 1) {\r\n      cartQty = 1;\r\n    }\r\n    document.getElementById(\"qtyBox1\" + id).value = cartQty;\r\n  }\r\n\r\n  UpdateCartQTY(e, id, setCart, cartQty);\r\n};\r\n","D:\\modern\\src\\components\\header\\Header.js",[],[],"D:\\modern\\src\\components\\header\\Middle.js",["774"],[],"D:\\modern\\src\\components\\header\\Nav.js",[],[],"D:\\modern\\src\\components\\header\\Top.js",[],[],"D:\\modern\\src\\components\\home\\BrandSlider.js",[],[],"D:\\modern\\src\\components\\home\\CompanyIntroduction.js",[],[],"D:\\modern\\src\\components\\home\\IndexSlider.js",[],[],"D:\\modern\\src\\components\\home\\Layout.js",[],[],"D:\\modern\\src\\components\\home\\MiniBanner1.js",[],[],"D:\\modern\\src\\components\\home\\MiniBanner2.js",[],[],"D:\\modern\\src\\components\\home\\MiniBanner3.js",[],[],"D:\\modern\\src\\components\\login\\Athenticated.js",[],[],"D:\\modern\\src\\components\\login\\CreateAccount.js",[],[],"D:\\modern\\src\\components\\login\\Heading.js",[],[],"D:\\modern\\src\\components\\login\\Layout.js",[],[],"D:\\modern\\src\\components\\login\\LoginScreen.js",[],[],"D:\\modern\\src\\components\\product\\AdditionalInformation.js",[],[],"D:\\modern\\src\\components\\product\\AddtoCartArea.js",[],[],"D:\\modern\\src\\components\\product\\AltImages.js",[],[],"D:\\modern\\src\\components\\product\\BreadCrumbs.js",[],[],"D:\\modern\\src\\components\\product\\MainImage.js",["775"],[],"import React from \"react\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n\r\nconst MainImage = (props) => {\r\n  let getProducts = props.getProducts;\r\n\r\n  return (\r\n    <Link href={getProducts.image}>\r\n      <a\r\n        id=\"zoomer\"\r\n        className=\"MagicZoomPlus\"\r\n        data-options=\"rightClick: true; expand: false;\"\r\n      >\r\n        <img\r\n          className=\"prodImage\"\r\n          src={getProducts.image}\r\n          style={{ maxWidth: \"500px\", maxHeight: \"1024px\" }}\r\n          title={getProducts.name}\r\n          alt={getProducts.name}\r\n        />\r\n      </a>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MainImage;\r\n","D:\\modern\\src\\components\\product\\ProductInfo.js",["776","777","778","779","780"],[],"import React from \"react\";\r\nconst ProductInfo = (props) => {\r\n  let getProducts = props.getProducts;\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <h1 className=\"name\">{getProducts.name}</h1>\r\n      <div className=\"prod-pricing-container\">\r\n        <div id=\"pricing\" className=\"w-100\">\r\n          {getProducts.price > 0 ? (\r\n            <>\r\n              <span id=\"price\">${getProducts.price}</span>\r\n            </>\r\n          ) : (\r\n            <span id=\"price\"></span>\r\n          )}\r\n          <strong>\r\n            <i className=\"fas fa-circle-check\"></i> In stock\r\n          </strong>\r\n        </div>\r\n      </div>\r\n      <p className=\"pratings\">\r\n        <img\r\n          className=\"previewstar\"\r\n          src=\"https://template1.cumulusbetasites.com/images/reviews_star/star_full.png\"\r\n          alt=\"star full\"\r\n          title=\"star full\"\r\n        />\r\n        <img\r\n          className=\"previewstar\"\r\n          src=\"https://template1.cumulusbetasites.com/images/reviews_star/star_full.png\"\r\n          alt=\"star full\"\r\n          title=\"star full\"\r\n        />\r\n        <img\r\n          className=\"previewstar\"\r\n          src=\"https://template1.cumulusbetasites.com/images/reviews_star/star_full.png\"\r\n          alt=\"star full\"\r\n          title=\"star full\"\r\n        />\r\n        <img\r\n          className=\"previewstar\"\r\n          src=\"https://template1.cumulusbetasites.com/images/reviews_star/star_full.png\"\r\n          alt=\"star full\"\r\n          title=\"star full\"\r\n        />\r\n        <img\r\n          className=\"previewstar\"\r\n          src=\"https://template1.cumulusbetasites.com/images/reviews_star/star_empty.png\"\r\n          alt=\"star empty\"\r\n          title=\"star empty\"\r\n        />\r\n        <a href=\"#exTab1\" className=\"preview-totalcount\">\r\n          2 Ratings\r\n        </a>\r\n      </p>\r\n      <p id=\"pcode\">\r\n        <strong>product ID:</strong>\r\n        <span>{getProducts.style}</span>\r\n      </p>\r\n      <p id=\"pcode\">\r\n        <strong>UPC:</strong>\r\n        <span>{getProducts.upc}</span>\r\n      </p>\r\n      <p id=\"brandprod\">\r\n        <strong>Brand:</strong>\r\n        <span>{getProducts.brand}</span>\r\n      </p>\r\n      <p id=\"avail\">\r\n        <strong>UPC:</strong>\r\n        <span>In stock</span>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;\r\n","D:\\modern\\src\\components\\product\\ProductPrice.js",[],[],"D:\\modern\\src\\components\\product\\ProductSwap.js",[],[],"D:\\modern\\src\\components\\product\\RelatedProducts.js",[],[],"D:\\modern\\src\\components\\product\\WishListPopUp.js",[],[],"D:\\modern\\src\\components\\sidenav\\SelectedFilters.js",[],[],"D:\\modern\\src\\components\\sidenav\\ShopByAvailability.js",[],[],"D:\\modern\\src\\components\\sidenav\\ShopByCategory.js",[],[],"D:\\modern\\src\\components\\sidenav\\ShopByDynamicAttribute.js",[],[],"D:\\modern\\src\\components\\sidenav\\Sidenav.js",["781","782"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  AddCategories,\r\n  AddThisFilter,\r\n  CheckAvailable,\r\n  RemoveCategories,\r\n  RemoveFilter,\r\n  ShopByAttributes,\r\n  ShopByCategories,\r\n} from \"../../controllers/sideNav\";\r\nimport SelectedFilters from \"./SelectedFilters\";\r\nimport ShopByAvailability from \"./ShopByAvailability\";\r\nimport ShopByCategory from \"./ShopByCategory\";\r\nimport ShopByDynamicAttribute from \"./ShopByDynamicAttribute\";\r\n\r\nconst Sidenav = (props) => {\r\n  const allProducts = props.allProducts;\r\n  const alltaxonomy = props.allTaxonomy;\r\n  const filters = props.allFilters;\r\n\r\n  const categoryModeValue = props.categoryMode;\r\n\r\n  let attributes = [];\r\n  let attributesCount = [];\r\n  const [atrs, setAtrs] = useState([]);\r\n  let CategoriesData = {};\r\n\r\n  let taxonomy = \"\";\r\n  let categories = [];\r\n  let urls = [];\r\n  CategoriesData = ShopByCategories(\r\n    props.urlTaxonomy,\r\n    props.allCurrentProducts,\r\n    alltaxonomy,\r\n    props.categoryMode\r\n  );\r\n  taxonomy = CategoriesData.taxonomy;\r\n  categories = CategoriesData.categories;\r\n  urls = CategoriesData.URL;\r\n\r\n  useEffect(async () => {\r\n    attributes = await ShopByAttributes(allProducts);\r\n    setAtrs(attributes);\r\n  }, [props.products]);\r\n  attributes = atrs;\r\n  return (\r\n    <section\r\n      id=\"SideNav\"\r\n      className=\"col-lg-2 col-md-4 col-12 filters pt-5-lg pt-3-md pt-1-sm pt-2\"\r\n    >\r\n      <div\r\n        className=\"accordion accordion-flush pt-5-lg pt-3-md pt-1-sm pt-2\"\r\n        id=\"accordionFlush\"\r\n      >\r\n        <button\r\n          id=\"filterby\"\r\n          className=\"mb-3 w-100\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#flush-collapse\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"flush-collapse\"\r\n        >\r\n          Filter By\r\n        </button>\r\n        <div\r\n          id=\"flush-collapse\"\r\n          className=\" collapse border-white border\"\r\n          aria-labelledby=\"flush-heading\"\r\n          data-bs-parent=\"#accordionFlush\"\r\n        >\r\n          {categoryModeValue == \"category\" ? (\r\n            <SelectedFilters\r\n              filters={filters}\r\n              setAllFilters={props.setAllFilters}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {categoryModeValue == \"category\" ? (\r\n            <ShopByAvailability\r\n              setCheckAvailability={props.setCheckAvailability}\r\n              checkAvailability={props.checkAvailability}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/**************** START SHOP BY CATEGORY ******************* */}\r\n\r\n          {categories && categories.length > 0 ? (\r\n            <ShopByCategory\r\n              categories={categories}\r\n              filters={filters}\r\n              setAllFilters={props.setAllFilters}\r\n              taxonomy={taxonomy}\r\n              urls={urls}\r\n              categoryMode={categoryModeValue}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {/**************** END SHOP BY CATEGORY ******************* */}\r\n\r\n          {/****************START DYNAMIC FILTERS******************* */}\r\n          <ShopByDynamicAttribute\r\n            attributes={attributes}\r\n            filters={filters}\r\n            setAllFilters={props.setAllFilters}\r\n            setSearchText={props.setSearchText}\r\n          />\r\n\r\n          {/****************END DYNAMIC FILTERS******************* */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Sidenav;\r\n","D:\\modern\\src\\pages\\api\\orders\\createOrder.js",[],[],"D:\\modern\\src\\pages\\api\\orders\\getOrdersByID.js",[],[],"D:\\modern\\src\\pages\\api\\orders\\getOrdersList.js",[],[],"D:\\modern\\src\\pages\\api\\payment\\authorize.net\\create-order.js",[],[],"D:\\modern\\src\\pages\\api\\payment\\paypal\\cancel-payment.js",[],[],"D:\\modern\\src\\pages\\api\\payment\\paypal\\capture-order.js",[],[],"D:\\modern\\src\\pages\\api\\payment\\paypal\\create-order.js",[],[],"D:\\modern\\src\\pages\\error\\index.js",[],[],"D:\\modern\\src\\pages\\home.js",[],[],"D:\\modern\\src\\pages\\orders\\[id].js",["783","784","785","786","787","788"],[],"D:\\modern\\src\\pages\\paypal\\[payment].js",["789","790"],[],"D:\\modern\\src\\pages\\thank-you.js",["791","792"],[],"D:\\modern\\src\\components\\thankYou\\Contact.js",[],[],"D:\\modern\\src\\components\\thankYou\\Items.js",[],[],"D:\\modern\\src\\components\\thankYou\\TopCreditCard.js",[],[],"D:\\modern\\src\\components\\thankYou\\TopPaypal.js",[],[],"D:\\modern\\src\\pages\\products\\[[...slug]].js",["793","794","795","796"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Head from \"next/head\";\r\nimport { getBreadCrumbs, magicZoomEffect } from \"../../controllers/product\";\r\nimport BreadCrumbs from \"../../components/product/BreadCrumbs\";\r\nimport MainImage from \"../../components/product/MainImage\";\r\nimport AltImages from \"../../components/product/AltImages\";\r\nimport ProductInfo from \"../../components/product/ProductInfo\";\r\nimport ProductPrice from \"../../components/product/ProductPrice\";\r\nimport AddtoCartArea from \"../../components/product/AddtoCartArea\";\r\nimport ProductSwap from \"../../components/product/ProductSwap\";\r\nimport AdditionalInformation from \"../../components/product/AdditionalInformation\";\r\nimport RelatedProducts from \"../../components/product/RelatedProducts\";\r\nimport CartPopUP from \"../../components/cart/CartPopUP\";\r\nimport WishListPopUp from \"../../components/product/WishListPopUp\";\r\nimport { getUserWishLists } from \"../../controllers/wishlist\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Footer from \"../../components/footer/Footer\";\r\n\r\nconst Product = (props) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [fakeState, setFakeState] = useState(\"\");\r\n  const [userLists, setUserLists] = useState([]);\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n  if (!slug || slug.length < 1) {\r\n    return \"Invalid product ID or URL\";\r\n  }\r\n\r\n  let cartValue = [];\r\n  if (typeof window != \"undefined\") {\r\n    cartValue = JSON.parse(localStorage.getItem(\"cart\"));\r\n  }\r\n  let getProducts = [];\r\n  let { product, rProducts } = props.data;\r\n\r\n  let taxanomy = props.taxonomy;\r\n  getProducts = { ...product };\r\n  let breadCrumsContent = getBreadCrumbs(taxanomy, product);\r\n  // START DISPLAY META DATA\r\n  // END DISPLAY META DATA\r\n\r\n  // START DISPLAY PRODUCT PAGE LAYOUT\r\n  //const cartItems = useSelector((state) => state.cart);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      magicZoomEffect();\r\n    } catch (err) {}\r\n  }, []);\r\n\r\n  let userID = \"\";\r\n  useEffect(async () => {\r\n    userID = localStorage.getItem(\"currentAliveUser\");\r\n\r\n    let lists = await getUserWishLists(userID);\r\n    setUserLists(lists);\r\n  }, [fakeState]);\r\n\r\n  // SET SEO TAGS\r\n  let title = \"\";\r\n  let desc = \"\";\r\n  let keywords = \"\";\r\n  try {\r\n    title = getProducts.name;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    desc = getProducts.name;\r\n  } catch (err) {}\r\n\r\n  try {\r\n    keywords = getProducts.name;\r\n  } catch (err) {}\r\n\r\n  if (!title || title == \"\") {\r\n    title = getProducts.name;\r\n  }\r\n\r\n  if (!desc || desc == \"\") {\r\n    desc = \"shop now \" + getProducts.name;\r\n  }\r\n\r\n  if (!keywords || keywords == \"\") {\r\n    keywords = getProducts.name;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{title}</title>\r\n        <meta name=\"title\" content={title} />\r\n        <meta name=\"description\" content={desc} />\r\n        <meta name=\"keywords\" content={keywords} />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n      </Head>\r\n      <Header taxonomy={props.taxonomy} cartData={cartValue} />\r\n\r\n      <section id=\"contentHolder\">\r\n        <div id=\"productcontent\" className=\"bagecolorbg\">\r\n          <div className=\"container-fluid product-container mx-auto no-gutters nopadding\">\r\n            <BreadCrumbs breadCrumsContent={breadCrumsContent} />\r\n\r\n            <div className=\"row  procontainer\">\r\n              <div className=\"col-xl-6 col-lg-6 col-md-6  col-sm-6 col-12 mt-3 product-img\">\r\n                <MainImage getProducts={getProducts} />\r\n                <AltImages getProducts={getProducts} />\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 mt-lg-3 mt-sm-0  bg-white\"\r\n                id=\"purchasing\"\r\n              >\r\n                <div className=\"inner\">\r\n                  <ProductInfo getProducts={getProducts} />\r\n\r\n                  <div id=\"atcHolder\">\r\n                    <ProductPrice getProducts={getProducts} />\r\n                    <AddtoCartArea\r\n                      getProducts={getProducts}\r\n                      cart={cart}\r\n                      setCart={setCart}\r\n                    />\r\n                  </div>\r\n\r\n                  <ProductSwap getProducts={getProducts} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <AdditionalInformation getProducts={getProducts} />\r\n\r\n            <RelatedProducts products={rProducts} />\r\n\r\n            <CartPopUP cart={cart} ID={getProducts.id} products={rProducts} />\r\n            <WishListPopUp\r\n              currentProduct={getProducts}\r\n              userLists={userLists}\r\n              setUserLists={setUserLists}\r\n              setFakeState={setFakeState}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n  // END DISPLAY CATEGORY PAGE LAYOUT\r\n};\r\n\r\n// START SERVER SIDE RENDERING FOR DATA FETCH\r\nexport async function getServerSideProps({ query, res }) {\r\n  try {\r\n    res.setHeader(\r\n      \"Cache-Control\",\r\n      \"public, s-maxage=86400, stale-while-revalidate=60\"\r\n    );\r\n  } catch (err) {}\r\n\r\n  let { URL } = process.env;\r\n\r\n  const { slug } = query;\r\n  let productID = 0;\r\n  let productName = \"\";\r\n  try {\r\n    productID = slug[0];\r\n  } catch (err) {}\r\n  try {\r\n    productName = slug[1];\r\n  } catch (err) {}\r\n\r\n  let data = {\r\n    taxanomy: [],\r\n    product: {},\r\n    rProducts: [],\r\n  };\r\n\r\n  let taxanomy = [];\r\n  let prod = {};\r\n  let related = [];\r\n\r\n  // Fetch taxanomy from external API\r\n  let resp = {};\r\n\r\n  // Fetch product data from external API\r\n  try {\r\n    resp = await fetch(URL + `/api/product/${productID}`);\r\n    prod = await resp.json();\r\n    data.product = prod;\r\n  } catch (err) {\r\n    data.product = {};\r\n  }\r\n\r\n  let currentProductDEPT = \"\";\r\n\r\n  if (!data.product.Dept || data.product.Dept == \"\") {\r\n    currentProductDEPT = \"\";\r\n  } else {\r\n    currentProductDEPT = data.product.Dept;\r\n  }\r\n\r\n  // Fetch related products data from external API\r\n  let prodLimit = 10;\r\n  try {\r\n    resp = await fetch(\r\n      URL + `/api/product/realtedProducts/${currentProductDEPT}/${prodLimit}`\r\n    );\r\n    related = await resp.json();\r\n    data.rProducts = related;\r\n  } catch (err) {\r\n    data.rProducts = [];\r\n  }\r\n\r\n  // Pass data to the page via props\r\n  return { props: { data } };\r\n}\r\n// END SERVER SIDE RENDERING FOR DATA FETCH\r\n\r\nexport default Product;\r\n",{"ruleId":"797","severity":1,"message":"798","line":35,"column":13,"nodeType":"799","endLine":38,"endColumn":4},{"ruleId":"797","severity":1,"message":"800","line":38,"column":6,"nodeType":"801","endLine":38,"endColumn":8,"suggestions":"802"},{"ruleId":"797","severity":1,"message":"800","line":47,"column":6,"nodeType":"801","endLine":47,"endColumn":27,"suggestions":"803"},{"ruleId":"797","severity":1,"message":"804","line":27,"column":6,"nodeType":"801","endLine":27,"endColumn":8,"suggestions":"805"},{"ruleId":"797","severity":1,"message":"806","line":141,"column":6,"nodeType":"801","endLine":141,"endColumn":12,"suggestions":"807"},{"ruleId":"797","severity":1,"message":"808","line":196,"column":6,"nodeType":"801","endLine":196,"endColumn":13,"suggestions":"809"},{"ruleId":"797","severity":1,"message":"806","line":137,"column":6,"nodeType":"801","endLine":137,"endColumn":12,"suggestions":"810"},{"ruleId":"797","severity":1,"message":"808","line":191,"column":6,"nodeType":"801","endLine":191,"endColumn":13,"suggestions":"811"},{"ruleId":"797","severity":1,"message":"806","line":140,"column":6,"nodeType":"801","endLine":140,"endColumn":12,"suggestions":"812"},{"ruleId":"797","severity":1,"message":"808","line":194,"column":6,"nodeType":"801","endLine":194,"endColumn":13,"suggestions":"813"},{"ruleId":"797","severity":1,"message":"814","line":33,"column":6,"nodeType":"801","endLine":33,"endColumn":17,"suggestions":"815"},{"ruleId":"797","severity":1,"message":"806","line":122,"column":6,"nodeType":"801","endLine":122,"endColumn":12,"suggestions":"816"},{"ruleId":"797","severity":1,"message":"808","line":176,"column":6,"nodeType":"801","endLine":176,"endColumn":13,"suggestions":"817"},{"ruleId":"797","severity":1,"message":"798","line":38,"column":13,"nodeType":"799","endLine":41,"endColumn":4},{"ruleId":"797","severity":1,"message":"818","line":51,"column":16,"nodeType":"819","endLine":51,"endColumn":56},{"ruleId":"797","severity":1,"message":"814","line":57,"column":6,"nodeType":"801","endLine":57,"endColumn":17,"suggestions":"820"},{"ruleId":"797","severity":1,"message":"804","line":19,"column":6,"nodeType":"801","endLine":19,"endColumn":8,"suggestions":"821"},{"ruleId":"822","severity":2,"message":"823","line":72,"column":7,"nodeType":"824","endLine":81,"endColumn":16},{"ruleId":"825","severity":1,"message":"826","line":96,"column":7,"nodeType":"827","endLine":96,"endColumn":57},{"ruleId":"825","severity":1,"message":"826","line":97,"column":7,"nodeType":"827","endLine":97,"endColumn":67},{"ruleId":"825","severity":1,"message":"826","line":99,"column":7,"nodeType":"827","endLine":99,"endColumn":74},{"ruleId":"828","severity":1,"message":"829","line":106,"column":17,"nodeType":"827","endLine":106,"endColumn":62},{"ruleId":"797","severity":1,"message":"814","line":28,"column":6,"nodeType":"801","endLine":28,"endColumn":17,"suggestions":"830"},{"ruleId":"828","severity":1,"message":"829","line":50,"column":25,"nodeType":"827","endLine":50,"endColumn":74},{"ruleId":"831","severity":1,"message":"832","line":50,"column":25,"nodeType":"827","endLine":50,"endColumn":74},{"ruleId":"828","severity":1,"message":"829","line":133,"column":23,"nodeType":"827","endLine":133,"endColumn":81},{"ruleId":"831","severity":1,"message":"832","line":133,"column":23,"nodeType":"827","endLine":133,"endColumn":81},{"ruleId":"828","severity":1,"message":"829","line":46,"column":21,"nodeType":"827","endLine":46,"endColumn":78},{"ruleId":"831","severity":1,"message":"832","line":46,"column":21,"nodeType":"827","endLine":46,"endColumn":78},{"ruleId":"797","severity":1,"message":"798","line":9,"column":13,"nodeType":"799","endLine":15,"endColumn":4},{"ruleId":"828","severity":1,"message":"829","line":42,"column":25,"nodeType":"827","endLine":42,"endColumn":116},{"ruleId":"828","severity":1,"message":"829","line":75,"column":29,"nodeType":"827","endLine":75,"endColumn":68},{"ruleId":"831","severity":1,"message":"832","line":75,"column":29,"nodeType":"827","endLine":75,"endColumn":68},{"ruleId":"828","severity":1,"message":"829","line":162,"column":29,"nodeType":"827","endLine":166,"endColumn":31},{"ruleId":"831","severity":1,"message":"832","line":162,"column":29,"nodeType":"827","endLine":166,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":57,"column":28,"nodeType":"827","endLine":57,"endColumn":85},{"ruleId":"831","severity":1,"message":"832","line":57,"column":28,"nodeType":"827","endLine":57,"endColumn":85},{"ruleId":"828","severity":1,"message":"829","line":41,"column":11,"nodeType":"827","endLine":45,"endColumn":13},{"ruleId":"828","severity":1,"message":"829","line":41,"column":31,"nodeType":"827","endLine":46,"endColumn":33},{"ruleId":"828","severity":1,"message":"829","line":25,"column":31,"nodeType":"827","endLine":25,"endColumn":96},{"ruleId":"831","severity":1,"message":"832","line":25,"column":31,"nodeType":"827","endLine":25,"endColumn":96},{"ruleId":"828","severity":1,"message":"829","line":29,"column":19,"nodeType":"827","endLine":29,"endColumn":112},{"ruleId":"828","severity":1,"message":"829","line":86,"column":25,"nodeType":"827","endLine":94,"endColumn":27},{"ruleId":"828","severity":1,"message":"829","line":120,"column":23,"nodeType":"827","endLine":120,"endColumn":116},{"ruleId":"828","severity":1,"message":"829","line":177,"column":29,"nodeType":"827","endLine":185,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":211,"column":23,"nodeType":"827","endLine":211,"endColumn":116},{"ruleId":"828","severity":1,"message":"829","line":268,"column":29,"nodeType":"827","endLine":276,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":302,"column":23,"nodeType":"827","endLine":302,"endColumn":116},{"ruleId":"828","severity":1,"message":"829","line":359,"column":29,"nodeType":"827","endLine":367,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":393,"column":23,"nodeType":"827","endLine":393,"endColumn":116},{"ruleId":"828","severity":1,"message":"829","line":450,"column":29,"nodeType":"827","endLine":458,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":24,"column":11,"nodeType":"827","endLine":28,"endColumn":13},{"ruleId":"833","severity":1,"message":"834","line":8,"column":7,"nodeType":"827","endLine":13,"endColumn":8},{"ruleId":"833","severity":1,"message":"834","line":34,"column":9,"nodeType":"827","endLine":39,"endColumn":10},{"ruleId":"833","severity":1,"message":"834","line":9,"column":7,"nodeType":"827","endLine":14,"endColumn":8},{"ruleId":"828","severity":1,"message":"829","line":17,"column":17,"nodeType":"827","endLine":22,"endColumn":19},{"ruleId":"833","severity":1,"message":"834","line":9,"column":7,"nodeType":"827","endLine":14,"endColumn":8},{"ruleId":"828","severity":1,"message":"829","line":51,"column":27,"nodeType":"827","endLine":51,"endColumn":73},{"ruleId":"828","severity":1,"message":"829","line":136,"column":27,"nodeType":"827","endLine":136,"endColumn":73},{"ruleId":"797","severity":1,"message":"835","line":21,"column":17,"nodeType":"819","endLine":21,"endColumn":57},{"ruleId":"828","severity":1,"message":"829","line":15,"column":9,"nodeType":"827","endLine":21,"endColumn":11},{"ruleId":"828","severity":1,"message":"829","line":24,"column":9,"nodeType":"827","endLine":29,"endColumn":11},{"ruleId":"828","severity":1,"message":"829","line":30,"column":9,"nodeType":"827","endLine":35,"endColumn":11},{"ruleId":"828","severity":1,"message":"829","line":36,"column":9,"nodeType":"827","endLine":41,"endColumn":11},{"ruleId":"828","severity":1,"message":"829","line":42,"column":9,"nodeType":"827","endLine":47,"endColumn":11},{"ruleId":"828","severity":1,"message":"829","line":48,"column":9,"nodeType":"827","endLine":53,"endColumn":11},{"ruleId":"797","severity":1,"message":"798","line":42,"column":13,"nodeType":"799","endLine":45,"endColumn":4},{"ruleId":"797","severity":1,"message":"836","line":43,"column":18,"nodeType":"837","endLine":43,"endColumn":53},{"ruleId":"838","severity":2,"message":"839","line":8,"column":18,"nodeType":"840","endLine":8,"endColumn":27},{"ruleId":"838","severity":2,"message":"841","line":11,"column":29,"nodeType":"840","endLine":11,"endColumn":37},{"ruleId":"838","severity":2,"message":"841","line":12,"column":33,"nodeType":"840","endLine":12,"endColumn":41},{"ruleId":"838","severity":2,"message":"842","line":14,"column":3,"nodeType":"840","endLine":14,"endColumn":12},{"ruleId":"797","severity":1,"message":"798","line":14,"column":13,"nodeType":"799","endLine":18,"endColumn":4},{"ruleId":"797","severity":1,"message":"843","line":18,"column":6,"nodeType":"801","endLine":18,"endColumn":8,"suggestions":"844"},{"ruleId":"797","severity":1,"message":"798","line":20,"column":13,"nodeType":"799","endLine":22,"endColumn":4},{"ruleId":"797","severity":1,"message":"845","line":35,"column":6,"nodeType":"801","endLine":35,"endColumn":15,"suggestions":"846"},{"ruleId":"828","severity":1,"message":"829","line":202,"column":31,"nodeType":"827","endLine":202,"endColumn":76},{"ruleId":"831","severity":1,"message":"832","line":202,"column":31,"nodeType":"827","endLine":202,"endColumn":76},{"ruleId":"838","severity":2,"message":"847","line":46,"column":3,"nodeType":"840","endLine":46,"endColumn":12},{"ruleId":"838","severity":2,"message":"847","line":53,"column":3,"nodeType":"840","endLine":53,"endColumn":12},{"ruleId":"797","severity":1,"message":"798","line":53,"column":13,"nodeType":"799","endLine":58,"endColumn":4},{"ruleId":"797","severity":1,"message":"848","line":54,"column":14,"nodeType":"819","endLine":54,"endColumn":54},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.","ArrayExpression",["849"],["850"],"React Hook useEffect has a missing dependency: 'loginstatus'. Either include it or remove the dependency array.",["851"],"React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["852"],"React Hook useEffect has a missing dependency: 'taxanomyFilters'. Either include it or remove the dependency array.",["853"],["854"],["855"],["856"],["857"],"React Hook useEffect has a missing dependency: 'cartData'. Either include it or remove the dependency array.",["858"],["859"],["860"],"Assignments to the 'cartData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["861"],["862"],"@next/next/inline-script-id","next/script components with inline content must specify an `id` attribute. See: https://nextjs.org/docs/messages/inline-script-id","JSXElement","@next/next/no-css-tags","Do not include stylesheets manually. See: https://nextjs.org/docs/messages/no-css-tags","JSXOpeningElement","@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element",["863"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role heading. This role is implicit on the element h4.","Assignments to the 'cartValue' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'attributes' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","react-hooks/rules-of-hooks","React Hook \"useRouter\" is called in function \"orderbyID\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","Identifier","React Hook \"useState\" is called in function \"orderbyID\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"orderbyID\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["864"],"React Hook useEffect has missing dependencies: 'orderDetails', 'orderNumber', and 'paymentData'. Either include them or remove the dependency array.",["865"],"React Hook \"useEffect\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","Assignments to the 'userID' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},{"desc":"874","fix":"875"},{"desc":"872","fix":"876"},{"desc":"874","fix":"877"},{"desc":"872","fix":"878"},{"desc":"874","fix":"879"},{"desc":"880","fix":"881"},{"desc":"872","fix":"882"},{"desc":"874","fix":"883"},{"desc":"880","fix":"884"},{"desc":"870","fix":"885"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},{"desc":"890","fix":"891"},"Update the dependencies array to be: [userID]",{"range":"892","text":"893"},"Update the dependencies array to be: [listName, userID, userLists]",{"range":"894","text":"895"},"Update the dependencies array to be: [loginstatus]",{"range":"896","text":"897"},"Update the dependencies array to be: [products, slug]",{"range":"898","text":"899"},"Update the dependencies array to be: [taxanomyFilters, uData]",{"range":"900","text":"901"},{"range":"902","text":"899"},{"range":"903","text":"901"},{"range":"904","text":"899"},{"range":"905","text":"901"},"Update the dependencies array to be: [cartData, checkCart]",{"range":"906","text":"907"},{"range":"908","text":"899"},{"range":"909","text":"901"},{"range":"910","text":"907"},{"range":"911","text":"897"},"Update the dependencies array to be: [cartData, listItems]",{"range":"912","text":"913"},"Update the dependencies array to be: [id]",{"range":"914","text":"915"},"Update the dependencies array to be: [loading, orderDetails, orderNumber, paymentData]",{"range":"916","text":"917"},[1210,1212],"[userID]",[1434,1455],"[listName, userID, userLists]",[650,652],"[loginstatus]",[3686,3692],"[products, slug]",[5086,5093],"[taxanomyFilters, uData]",[3683,3689],[5032,5039],[3708,3714],[5057,5064],[901,912],"[cartData, checkCart]",[3360,3366],[4712,4719],[1758,1769],[550,552],[727,738],"[cartData, listItems]",[582,584],"[id]",[1027,1036],"[loading, orderDetails, orderNumber, paymentData]"]